{
  "hash": "04a4adcfd11133afe27a01b71acffd76",
  "result": {
    "markdown": "---\ntitle: Preprocesamiento de datos\nlang: es\n---\n\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/paquetes_5a39dcd2c636aacbd4039ca732574706'}\n\n:::\n\n\n## Ejercicios Resueltos\n\nPara la realización de esta práctica se requieren los paquetes `readr` y [`dplyr`](https://aprendeconalf.es/manual-r/06-preprocesamiento.html#el-paquete-dplyr) de la colección de paquetes [`tidyverse`](https://aprendeconalf.es/manual-r/06-preprocesamiento.html#la-colecci%C3%B3n-de-paquetes-tidyverse).\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-1_db4c1fca4e79f845dea621824a6d7c8b'}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\n```\n:::\n\n\n:::{#exr-preprocesamiento-1}\nLa siguiente tabla contiene los ingresos y gastos de una empresa durante el primer trimestre del año.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-2_60eceb1a6d8d6e5218daecf58bd7179f'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Mes </th>\n   <th style=\"text-align:right;\"> Ingresos </th>\n   <th style=\"text-align:right;\"> Gastos </th>\n   <th style=\"text-align:right;\"> Impuestos </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Enero </td>\n   <td style=\"text-align:right;\"> 45000 </td>\n   <td style=\"text-align:right;\"> 33400 </td>\n   <td style=\"text-align:right;\"> 6450 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Febrero </td>\n   <td style=\"text-align:right;\"> 41500 </td>\n   <td style=\"text-align:right;\"> 35400 </td>\n   <td style=\"text-align:right;\"> 6300 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Marzo </td>\n   <td style=\"text-align:right;\"> 51200 </td>\n   <td style=\"text-align:right;\"> 35600 </td>\n   <td style=\"text-align:right;\"> 7100 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\na. Crear un data frame con los datos de la tabla.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-3_662fc9b050eee85bc4b69fc2087a0b0f'}\n\n```{.r .cell-code}\ndf <- data.frame(\n    Mes = c(\"Enero\", \"Febrero\", \"Marzo\"),\n    Ingresos = c(45000, 41500, 51200),\n    Gastos = c(33400, 35400, 35600)\n    )\ndf \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos\n1   Enero    45000  33400\n2 Febrero    41500  35400\n3   Marzo    51200  35600\n```\n:::\n:::\n\n:::\n\nb. Añadir una nueva columna con los siguientes impuestos pagados.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-4_755de1169a9ff3ee2818765f055ad5e9'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Mes </th>\n   <th style=\"text-align:right;\"> Impuestos </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Enero </td>\n   <td style=\"text-align:right;\"> 6450 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Febrero </td>\n   <td style=\"text-align:right;\"> 6300 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Marzo </td>\n   <td style=\"text-align:right;\"> 7100 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1\nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-5_105583f72e86982c14d89405784b6501'}\n\n```{.r .cell-code}\ndf$Impuestos <- c(6450, 6300, 7100)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2\nCon las funciones del paquete `dplyr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-6_f638ae05657eca795958966ce831e7f7'}\n\n```{.r .cell-code}\ndf <- df %>%\n    mutate(Impuestos = c(6450, 6300, 7100))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n```\n:::\n:::\n\n:::\n\nc. Añadir una nueva fila con los siguientes datos de Abril. \n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-7_e487f9091878de487f49a69291ce9714'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Mes </th>\n   <th style=\"text-align:right;\"> Ingresos </th>\n   <th style=\"text-align:right;\"> Gastos </th>\n   <th style=\"text-align:right;\"> Impuestos </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Abril </td>\n   <td style=\"text-align:right;\"> 49700 </td>\n   <td style=\"text-align:right;\"> 36300 </td>\n   <td style=\"text-align:right;\"> 6850 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1 \nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-8_26b3fa63acae56a3aa50035a19dd0dfc'}\n\n```{.r .cell-code}\ndf <- rbind(df, list(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2 \nCon las funciones del paquete `dplyr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-9_69aa8b83f26cb4b6885186ba529982b5'}\n\n:::\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-10_ad21ee0e7f79a7ccd59e01569f1f865d'}\n\n```{.r .cell-code}\ndf <- df %>%\n    add_row(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n```\n:::\n:::\n\n:::\n\nd. Cambiar los ingresos de Marzo por 50400. \n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-11_dc76f4cf96a5053f8fee3a06cf63c2f4'}\n\n```{.r .cell-code}\ndf[3, \"Ingresos\"] <- 50400\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    50400  35600      7100\n4   Abril    49700  36300      6850\n```\n:::\n:::\n\n:::\n\ne. Crear una nueva columna con los beneficios de cada mes (ingresos - gastos - impuestos).\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1\nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-12_63348e17ec725482f224320973529222'}\n\n```{.r .cell-code}\ndf$Beneficios <- df$Ingresos - df$Gastos - df$Impuestos\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2\nCon las funciones del paquete `dplyr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-13_8a882cb8c96821294bb75326acd34806'}\n\n```{.r .cell-code}\ndf <- df %>%\n    mutate(Beneficios = Ingresos - Gastos - Impuestos)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n```\n:::\n:::\n\n:::\n\nf. Crear una nueva columna con el factor `Balance` con dos posibles categorías: `positivo` si ha habido beneficios y `negativo` si ha habido pérdidas.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1\nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-14_7887f54f523c0bb0f6603b80ddae25c7'}\n\n```{.r .cell-code}\ndf$Balance <- cut(df$Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\"))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2\nCon las funciones del paquete `dplyr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-15_423fc302f47dafb45194dbd0bd2a8282'}\n\n```{.r .cell-code}\ndf <- df %>%\n    mutate(Balance = cut(Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\")))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n```\n:::\n:::\n\n:::\n\ng. Filtrar el conjunto de datos para quedarse con los nombres de los meses y los beneficios de los meses con balance positivo. \n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1\nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-16_7eb15489065d4787fb90ce3943bf38d9'}\n\n```{.r .cell-code}\ndf[df$Balance == \"positivo\", c(\"Mes\", \"Beneficios\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Mes Beneficios\n1 Enero       5150\n3 Marzo       7700\n4 Abril       6550\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2\nCon las funciones del paquete `dplyr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-17_8fb5d309ca0aa7faf07654b0b6de4293'}\n\n```{.r .cell-code}\ndf %>%\n    filter(Balance == \"positivo\") %>% \n    select(Mes, Beneficios)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Mes Beneficios\n1 Enero       5150\n2 Marzo       7700\n3 Abril       6550\n```\n:::\n:::\n\n:::\n:::\n\n:::{#exr-preprocesamiento-2}\nEl fichero [`colesterol.csv`](datos/colesterol.csv) contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\na. Crear un data frame con los datos de todos los pacientes del estudio a partir del fichero [`colesterol.csv`](datos/colesterol.csv).\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 1\nCon las funciones básicas de R.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-18_caa5f87149c4c11339d45ff79bcb2874'}\n\n```{.r .cell-code}\ndf <- read.csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                            nombre edad sexo peso altura colesterol\n1     José Luis Martínez Izquierdo   18    H   85   1.79        182\n2                   Rosa Díaz Díaz   32    M   65   1.73        232\n3            Javier García Sánchez   24    H   NA   1.81        191\n4              Carmen López Pinzón   35    M   65   1.70        200\n5             Marisa López Collado   46    M   51   1.58        148\n6                Antonio Ruiz Cruz   68    H   66   1.74        249\n7          Antonio Fernández Ocaña   51    H   62   1.72        276\n8            Pilar Martín González   22    M   60   1.66         NA\n9             Pedro Gálvez Tenorio   35    H   90   1.94        241\n10         Santiago Reillo Manzano   46    H   75   1.85        280\n11           Macarena Álvarez Luna   53    M   55   1.62        262\n12      José María de la Guía Sanz   58    H   78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez   27    H  109   1.98        210\n14           Carolina Rubio Moreno   20    M   61   1.77        194\n```\n:::\n:::\n\n:::\n\n:::{.callout-tip collapse=\"true\"}\n## Solución 2\nCon las funciones del paquete `readr`.\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-19_e06d641993311e9e12ac4669c7a0739a'}\n\n```{.r .cell-code}\ndf <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 6\n   nombre                           edad sexo   peso altura colesterol\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232\n 3 Javier García Sánchez              24 H        NA   1.81        191\n 4 Carmen López Pinzón                35 M        65   1.7         200\n 5 Marisa López Collado               46 M        51   1.58        148\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276\n 8 Pilar Martín González              22 M        60   1.66         NA\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241\n10 Santiago Reillo Manzano            46 H        75   1.85        280\n11 Macarena Álvarez Luna              53 M        55   1.62        262\n12 José María de la Guía Sanz         58 H        78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210\n14 Carolina Rubio Moreno              20 M        61   1.77        194\n```\n:::\n:::\n\n:::\n\nb. Crear una nueva columna con el índice de masa corporal, usando la siguiente fórmula \n\n$$\n\\mbox{IMC} = \\frac{\\mbox{Peso (kg)}}{\\mbox{Altura (cm)}^2}\n$$\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-20_53f131c84522f7ff235b9a506c2dc48c'}\n\n```{.r .cell-code}\ndf <- df %>%\n    mutate(imc = round(peso/altura^2))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 7\n   nombre                           edad sexo   peso altura colesterol   imc\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182    27\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232    22\n 3 Javier García Sánchez              24 H        NA   1.81        191    NA\n 4 Carmen López Pinzón                35 M        65   1.7         200    22\n 5 Marisa López Collado               46 M        51   1.58        148    20\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249    22\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276    21\n 8 Pilar Martín González              22 M        60   1.66         NA    22\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241    24\n10 Santiago Reillo Manzano            46 H        75   1.85        280    22\n11 Macarena Álvarez Luna              53 M        55   1.62        262    21\n12 José María de la Guía Sanz         58 H        78   1.87        198    22\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210    28\n14 Carolina Rubio Moreno              20 M        61   1.77        194    19\n```\n:::\n:::\n\n:::\n\nc. Crear una nueva columna con la variable `obesidad` recodificando la columna `imc` en las siguientes categorías.\n\n| Rango IMC | Categoría |\n|:-|:-|\n|Menor de 18.5 | Bajo peso |\n|De 18.5 a 24.5 | Saludable |\n|De 24.5 a 30 | Sobrepeso |\n|Mayor de 30 | Obeso |\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-21_d48519dbb5cb57aabb129b56e09d33dc'}\n\n```{.r .cell-code}\ndf <- df %>%\n    mutate(Obesidad = cut(imc, breaks = c(0, 18.5, 24.5, 30, Inf), labels = c(\"Bajo peso\", \"Saludable\", \"Sobrepeso\", \"Obeso\")))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n 3 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 5 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 8 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n 9 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n10 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n11 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n12 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n13 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n14 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n```\n:::\n:::\n\n:::\n\nd. Seleccionar las columnas `nombre`, `sexo` y `edad`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-22_49ff19df3db18437d2e4933500cdeab8'}\n\n```{.r .cell-code}\ndf %>%\n    select(nombre, sexo, edad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 3\n   nombre                          sexo   edad\n   <chr>                           <chr> <dbl>\n 1 José Luis Martínez Izquierdo    H        18\n 2 Rosa Díaz Díaz                  M        32\n 3 Javier García Sánchez           H        24\n 4 Carmen López Pinzón             M        35\n 5 Marisa López Collado            M        46\n 6 Antonio Ruiz Cruz               H        68\n 7 Antonio Fernández Ocaña         H        51\n 8 Pilar Martín González           M        22\n 9 Pedro Gálvez Tenorio            H        35\n10 Santiago Reillo Manzano         H        46\n11 Macarena Álvarez Luna           M        53\n12 José María de la Guía Sanz      H        58\n13 Miguel Angel Cuadrado Gutiérrez H        27\n14 Carolina Rubio Moreno           M        20\n```\n:::\n:::\n\n:::\n\ne. Anonimizar los datos eliminando la columna `nombre`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-23_9891c1e06b69547db2f17faa6470ecff'}\n\n```{.r .cell-code}\ndf %>%\n    select(-nombre)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 7\n    edad sexo   peso altura colesterol   imc Obesidad \n   <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n 1    18 H        85   1.79        182    27 Sobrepeso\n 2    32 M        65   1.73        232    22 Saludable\n 3    24 H        NA   1.81        191    NA <NA>     \n 4    35 M        65   1.7         200    22 Saludable\n 5    46 M        51   1.58        148    20 Saludable\n 6    68 H        66   1.74        249    22 Saludable\n 7    51 H        62   1.72        276    21 Saludable\n 8    22 M        60   1.66         NA    22 Saludable\n 9    35 H        90   1.94        241    24 Saludable\n10    46 H        75   1.85        280    22 Saludable\n11    53 M        55   1.62        262    21 Saludable\n12    58 H        78   1.87        198    22 Saludable\n13    27 H       109   1.98        210    28 Sobrepeso\n14    20 M        61   1.77        194    19 Saludable\n```\n:::\n:::\n\n:::\n\nf. Reordenar las columnas poniendo la columna `sexo` antes que la columna `edad`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-24_d6efa5be359f7d42ed8b71d30fbf71c7'}\n\n```{.r .cell-code}\ndf %>%\n    select(nombre, sexo, edad, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 8\n   nombre                         sexo   edad  peso altura coles…¹   imc Obesi…²\n   <chr>                          <chr> <dbl> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo   H        18    85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                 M        32    65   1.73     232    22 Saluda…\n 3 Javier García Sánchez          H        24    NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón            M        35    65   1.7      200    22 Saluda…\n 5 Marisa López Collado           M        46    51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz              H        68    66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña        H        51    62   1.72     276    21 Saluda…\n 8 Pilar Martín González          M        22    60   1.66      NA    22 Saluda…\n 9 Pedro Gálvez Tenorio           H        35    90   1.94     241    24 Saluda…\n10 Santiago Reillo Manzano        H        46    75   1.85     280    22 Saluda…\n11 Macarena Álvarez Luna          M        53    55   1.62     262    21 Saluda…\n12 José María de la Guía Sanz     H        58    78   1.87     198    22 Saluda…\n13 Miguel Angel Cuadrado Gutiérr… H        27   109   1.98     210    28 Sobrep…\n14 Carolina Rubio Moreno          M        20    61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n```\n:::\n:::\n\n:::\n\ng. Filtrar el data frame para quedarse con las mujeres.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-25_a70507992eef51ed347d41f02c8c7ec9'}\n\n```{.r .cell-code}\ndf %>%\n    filter(sexo == \"M\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  nombre                 edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                 <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Rosa Díaz Díaz           32 M        65   1.73        232    22 Saludable\n2 Carmen López Pinzón      35 M        65   1.7         200    22 Saludable\n3 Marisa López Collado     46 M        51   1.58        148    20 Saludable\n4 Pilar Martín González    22 M        60   1.66         NA    22 Saludable\n5 Macarena Álvarez Luna    53 M        55   1.62        262    21 Saludable\n6 Carolina Rubio Moreno    20 M        61   1.77        194    19 Saludable\n```\n:::\n:::\n\n:::\n\nh. Filtrar el data frame para quedarse con los hombres mayores de 30 años.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-26_f82b587465848af71e02f15fab30a183'}\n\n```{.r .cell-code}\ndf %>%\n    filter( sexo == \"H\" & edad > 30)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 8\n  nombre                      edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludable\n2 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludable\n3 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludable\n4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludable\n5 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludable\n```\n:::\n:::\n\n:::\n\ni. Filtrar el data frame para eliminar las filas con datos perdidos en la columna `colesterol`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-27_6938d42546c3c851e3cadb5f21192225'}\n\n```{.r .cell-code}\ndf %>%\n    filter(!is.na(colesterol))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n 3 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 5 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 8 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n 9 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n10 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n11 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n12 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n13 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n```\n:::\n:::\n\n:::\n\nj. Ordenar el data frame según la columna `nombre`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-28_daf45aa8d4fe679ea44ba80ae01c3b1c'}\n\n```{.r .cell-code}\ndf %>%\n    arrange(nombre)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 2 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 3 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 4 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n 5 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 6 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 7 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n 8 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n 9 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n10 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n11 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n12 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n13 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n14 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n```\n:::\n:::\n\n:::\n\nk. Ordenar el data frame ascendentemente por la columna `sexo` y descendentemente por la columna `edad`.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-29_d93b1cfdfff93a8a0ac1b9810b616a73'}\n\n```{.r .cell-code}\ndf %>%\n    arrange(sexo, desc(edad))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 2 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n 3 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 4 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n 5 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n 6 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n 7 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 8 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 9 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n10 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n11 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n12 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n13 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n14 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n```\n:::\n:::\n\n:::\n:::\n\n:::{#exr-preprocesamiento-3}\nEl fichero [`notas-curso2.csv`](datos/notas-curso2.csv) contiene las notas de las asignaturas de un curso en varios grupos de alumnos.\n\na. Crear un data frame con los datos del curso a partir del fichero [`notas-curso2.csv`](datos/notas-curso2.csv).\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-30_ccb02663f9699d9eb8b9de89f62520d4'}\n\n```{.r .cell-code}\ndf <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/notas-curso2.csv\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 9\n   sexo   turno  grupo trabaja notaA notaB notaC notaD notaE\n   <chr>  <chr>  <chr> <chr>   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 Mujer  Tarde  C     N         5.2   6.3   3.4   2.3   2  \n 2 Hombre Mañana A     N         5.7   5.7   4.2   3.5   2.7\n 3 Hombre Mañana B     N         8.3   8.8   8.8   8     5.5\n 4 Hombre Mañana B     N         6.1   6.8   4     3.5   2.2\n 5 Hombre Mañana A     N         6.2   9     5     4.4   3.7\n 6 Hombre Mañana A     S         8.6   8.9   9.5   8.4   3.9\n 7 Mujer  Mañana A     N         6.7   7.9   5.6   4.8   4.2\n 8 Mujer  Tarde  C     S         4.1   5.2   1.7   0.3   1  \n 9 Hombre Tarde  C     N         5     5     3.3   2.7   6  \n10 Hombre Tarde  C     N         5.3   6.3   4.8   3.6   2.3\n# … with 110 more rows\n```\n:::\n:::\n\n:::\n\nb. Convertir el data frame a formato largo. \n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-31_58d95c84fcacd49cd294ed57cfbf5b0d'}\n\n```{.r .cell-code}\ndf_largo <- df %>% pivot_longer(notaA:notaE, names_to = \"Asignatura\", values_to = \"Nota\")\ndf_largo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 × 6\n   sexo   turno  grupo trabaja Asignatura  Nota\n   <chr>  <chr>  <chr> <chr>   <chr>      <dbl>\n 1 Mujer  Tarde  C     N       notaA        5.2\n 2 Mujer  Tarde  C     N       notaB        6.3\n 3 Mujer  Tarde  C     N       notaC        3.4\n 4 Mujer  Tarde  C     N       notaD        2.3\n 5 Mujer  Tarde  C     N       notaE        2  \n 6 Hombre Mañana A     N       notaA        5.7\n 7 Hombre Mañana A     N       notaB        5.7\n 8 Hombre Mañana A     N       notaC        4.2\n 9 Hombre Mañana A     N       notaD        3.5\n10 Hombre Mañana A     N       notaE        2.7\n# … with 590 more rows\n```\n:::\n:::\n\n:::\n\nc. Crear una nueva columna con la variable `calificación` que contenga las calificaciones de cada asignatura.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-32_d079b3fe9cff4806bfb588e68825c7dd'}\n\n```{.r .cell-code}\ndf_largo <- df_largo %>%\n    mutate(Califiación = cut(Nota, breaks = c(0, 4.99, 6.99, 8.99, 10), labels = c(\"SS\", \"AP\", \"NT\", \"SB\")))\ndf_largo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 × 7\n   sexo   turno  grupo trabaja Asignatura  Nota Califiación\n   <chr>  <chr>  <chr> <chr>   <chr>      <dbl> <fct>      \n 1 Mujer  Tarde  C     N       notaA        5.2 AP         \n 2 Mujer  Tarde  C     N       notaB        6.3 AP         \n 3 Mujer  Tarde  C     N       notaC        3.4 SS         \n 4 Mujer  Tarde  C     N       notaD        2.3 SS         \n 5 Mujer  Tarde  C     N       notaE        2   SS         \n 6 Hombre Mañana A     N       notaA        5.7 AP         \n 7 Hombre Mañana A     N       notaB        5.7 AP         \n 8 Hombre Mañana A     N       notaC        4.2 SS         \n 9 Hombre Mañana A     N       notaD        3.5 SS         \n10 Hombre Mañana A     N       notaE        2.7 SS         \n# … with 590 more rows\n```\n:::\n:::\n\n:::\n\nd. Filtrar el conjunto de datos para obtener las asignaturas y las notas de las mujeres del grupo A, ordenadas de mayor a menor.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-33_eb2f9c9c083e99a67076bead8ffe3faf'}\n\n```{.r .cell-code}\ndf_largo %>%\n    filter(sexo == \"Mujer\", grupo == \"A\") %>%\n    select(Asignatura, Nota) %>%\n    arrange(desc(Nota))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 75 × 2\n   Asignatura  Nota\n   <chr>      <dbl>\n 1 notaB        9.2\n 2 notaE        9.2\n 3 notaB        8.8\n 4 notaB        8.6\n 5 notaB        8.6\n 6 notaA        8.3\n 7 notaB        8.2\n 8 notaB        8.1\n 9 notaA        8  \n10 notaB        8  \n# … with 65 more rows\n```\n:::\n:::\n\n:::\n:::\n\n## Ejercicios Propuestos\n\n:::{#exr-preprocesaimento-5}\nLa siguiente tabla recoge las notas de los alumnos de un curso con dos asignaturas. \n\n| Alumno | Sexo | Física | Química |\n|:-|:-:|:-:|:-:|\n| Carlos | H | 6.7 | 8.1 |\n| María | M | 7.2 | 9.5 |\n| Carmen | M | 5.5 | 5 |\n| Pedro | H |  | 4.5 |\n| Luis | H | 3.5 | 5 |\n| Sara | M | 6.2 | 4 |\n\na. Definir cuatro vectores con el nombre, el sexo y las notas de Física y Química.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-34_ec35f79b25c2cc876d23011976b0242c'}\n\n```{.r .cell-code}\nnombre <- c(\"Carlos\", \"María\", \"Carmen\", \"Pedro\", \"Luis\", \"Sara\")\nsexo <- c(\"H\", \"M\", \"M\", \"H\", \"H\", \"M\")\nfisica <- c(6.7, 7.2, 5.5, NA, 3.5, 6.2)\nquimica <- c(8.1, 9.5, 5, 4.5, 5, 4)\n```\n:::\n\n:::\n\nb. Convertir el sexo en un factor y mostrar sus niveles.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-35_1f5655719837cc9a16069eb5b65e7906'}\n\n```{.r .cell-code}\nsexo <- factor(sexo)\nlevels(sexo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"H\" \"M\"\n```\n:::\n:::\n\n:::\n\nc. Crear un data frame con el nombre, sexo y las notas de Física y Química.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-36_012ee8f0af0661ac7eb6854052991764'}\n\n```{.r .cell-code}\ndf <- data.frame(nombre, sexo, fisica, quimica)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nombre sexo fisica quimica\n1 Carlos    H    6.7     8.1\n2  María    M    7.2     9.5\n3 Carmen    M    5.5     5.0\n4  Pedro    H     NA     4.5\n5   Luis    H    3.5     5.0\n6   Sara    M    6.2     4.0\n```\n:::\n:::\n\n:::\n\nd. Crear una nueva columna con la nota media de Física y Química.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-37_d65fe75ab99c3d29149ce01fa7b06c77'}\n\n```{.r .cell-code}\ndf$media <- (df$fisica + df$quimica) / 2\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nombre sexo fisica quimica media\n1 Carlos    H    6.7     8.1  7.40\n2  María    M    7.2     9.5  8.35\n3 Carmen    M    5.5     5.0  5.25\n4  Pedro    H     NA     4.5    NA\n5   Luis    H    3.5     5.0  4.25\n6   Sara    M    6.2     4.0  5.10\n```\n:::\n:::\n\n:::\n\ne. Crear una nueva columna booleana `aprobado` que tenga el valor `TRUE` si la media es mayor o igual que 5 y `FALSE` en caso contrario.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-38_24eb77e123a6baf0616400c0c53a0542'}\n\n```{.r .cell-code}\ndf$aprobado <- df$media >= 5\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nombre sexo fisica quimica media aprobado\n1 Carlos    H    6.7     8.1  7.40     TRUE\n2  María    M    7.2     9.5  8.35     TRUE\n3 Carmen    M    5.5     5.0  5.25     TRUE\n4  Pedro    H     NA     4.5    NA       NA\n5   Luis    H    3.5     5.0  4.25    FALSE\n6   Sara    M    6.2     4.0  5.10     TRUE\n```\n:::\n:::\n\n:::\n\nf. Filtrar el data frame para quedarse con el nombre y la media de las mujeres que han aprobado.\n\n:::{.callout-tip collapse=\"true\"}\n## Solución \n\n::: {.cell hash='02-preprocesamiento-datos_cache/html/unnamed-chunk-39_78d2eb26a64d96b53af2d8f82a016cf7'}\n\n```{.r .cell-code}\ndf[df$sexo == \"M\" & df$media >= 5, c(\"nombre\", \"media\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nombre media\n2  María  8.35\n3 Carmen  5.25\n6   Sara  5.10\n```\n:::\n:::\n\n:::\n:::\n\n\n:::{#exr-preprocesamiento-5}\nSe ha diseñado un ensayo clínico aleatorizado, doble-ciego y controlado con placebo, para estudiar el efecto de dos alternativas terapéuticas en el control de la hipertensión\narterial. Se han reclutado 100 pacientes hipertensos y estos han sido distribuidos aleatoriamente en tres grupos de tratamiento. A uno de los grupos (control) se le administró un placebo, a otro grupo se le administró un inhibidor de la enzima conversora de la angiotensina (IECA) y al otro un tratamiento combinado de un diurético y un Antagonista del Calcio. Las variables respuesta final fueron las presiones arteriales sistólica y diastólica.\n\nLos datos con las claves de aleatorización han sido introducidos en una base de datos que reside en la central de aleatorización,\nmientras que los datos clínicos han sido archivados en dos archivos distintos, uno para cada uno de los dos centros\nparticipantes en el estudio.\n\nLas variables almacenadas en estos archivos clínicos son las\nsiguientes:\n\n- CLAVE: Clave de aleatorización\n- NOMBRE: Iniciales del paciente\n- F\\_NACIM: Fecha de Nacimiento\n- F\\_INCLUS: Fecha de inclusión\n- SEXO: Sexo (0: Hombre 1: Mujer)\n- ALTURA: Altura en cm.\n- PESO: Peso en Kg.\n- PAD\\_INI: Presión diastólica basal (inicial)\n- PAD\\_FIN: Presión diastólica final\n- PAS\\_INI: Presión sistólica basal (inicial)\n- PAS\\_FIN:  Presión sistólica final\n\nEl archivo de claves de aleatorización contiene sólo dos variables.\n\n- CLAVE: Clave de aleatorización\n- FARMACO: Fármaco administrado (0: Placebo, 1: IECA,  2:Ca Antagonista + diurético)\n\na. Crear un data frame con los datos de los pacientes del hospital A (fichero de csv [datos-hospital-a.csv](datos/hipertension/datos-hospital-a.csv)).\n\nb. Crear un data frame con los datos de los pacientes del hospital B (fichero csv [datos-hospital-b.csv](datos/hipertension/datos-hospital-b.csv)).\n\nc. Fusionar los datos de los dos hospitales en un nuevo data frame.\n\n:::{.callout-note collapse=\"true\"}\n## Ayuda\nPara fusionar las filas de dos data frames con las mismas columnas usar la función [`rbind`](https://aprendeconalf.es/manual-r/03-tipos-datos-estructurados.html#a%C3%B1adir-elementos-a-un-data-frame).\n:::\n\nd. Crear un data frame con los datos de las claves de aleatorización (fichero csv [claves-aleatorizacion.csv](datos/hipertension/claves-aleatorizacion.csv))\n\ne. Fusionar el data frame con los datos clínicos y el data frame con claves de aleatorización en un nuevo data frame.\n\n:::{.callout-note collapse=\"true\"}\n## Ayuda\nPara fusionar las columnas de dos data frames usando una misma columna como clave en ambos data frames usar la función [`left_join`](https://dtplyr.tidyverse.org/reference/left_join.dtplyr_step.html) del paquete `dplyr`.\n:::\n\nf. Convertir en un factor el sexo.\n\ng. Crear una nueva columna para la evolución de la presión arterial diastólica restando las columnas `PAS_FIN` y `PAS_FIN`.\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}