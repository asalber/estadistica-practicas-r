{
  "hash": "df5bd484675e7d173cfd3b93f79fca6c",
  "result": {
    "markdown": "---\ntitle: Preprocesamiento de datos\nlang: es\n---\n\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/pdf/paquetes_629c7107e0ada5f21ad7c9c8a59fdadb'}\n\n:::\n\n\n\n## Ejercicios Resueltos\n\nPara la realización de esta práctica se requieren los paquetes `readr` y [`dplyr`](https://aprendeconalf.es/manual-r/06-preprocesamiento.html#el-paquete-dplyr) de la colección de paquetes [`tidyverse`](https://aprendeconalf.es/manual-r/06-preprocesamiento.html#la-colecci%C3%B3n-de-paquetes-tidyverse).\n\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-1_96848d61b09ea7a437c2ece25fb700ba'}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\n```\n:::\n\n\n\n:::{#exr-preprocesamiento-1}\nLa siguiente tabla contiene los ingresos y gastos de una empresa durante el primer trimestre del año.\n\n\n\n::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-2_71cdfdfd78920703e86979264d8f38a7'}\n::: {.cell-output-display}\n\\begin{tabu} to \\linewidth {>{\\raggedright}X>{\\raggedleft}X>{\\raggedleft}X>{\\raggedleft}X}\n\\hline\nMes & Ingresos & Gastos & Impuestos\\\\\n\\hline\nEnero & 45000 & 33400 & 6450\\\\\n\\hline\nFebrero & 41500 & 35400 & 6300\\\\\n\\hline\nMarzo & 51200 & 35600 & 7100\\\\\n\\hline\n\\end{tabu}\n:::\n:::\n\n\n\na.  Crear un data frame con los datos de la tabla.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-3_2053d5ca7fde8246556bf1770c4e8080'}\n    \n    ```{.r .cell-code}\n    df <- data.frame(\n        Mes = c(\"Enero\", \"Febrero\", \"Marzo\"),\n        Ingresos = c(45000, 41500, 51200),\n        Gastos = c(33400, 35400, 35600)\n        )\n    df \n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos\n    1   Enero    45000  33400\n    2 Febrero    41500  35400\n    3   Marzo    51200  35600\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Añadir una nueva columna con los siguientes impuestos pagados.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-4_dcb3c5945b4261f427b729c5bb9dc393'}\n    ::: {.cell-output-display}\n    \\begin{table}\n    \\centering\n    \\begin{tabular}{l|r}\n    \\hline\n    Mes & Impuestos\\\\\n    \\hline\n    Enero & 6450\\\\\n    \\hline\n    Febrero & 6300\\\\\n    \\hline\n    Marzo & 7100\\\\\n    \\hline\n    \\end{tabular}\n    \\end{table}\n    :::\n    :::\n\n\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-5_01bd576e5d601dc44bfc012728b9d3ed'}\n    \n    ```{.r .cell-code}\n    df$Impuestos <- c(6450, 6300, 7100)\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos\n    1   Enero    45000  33400      6450\n    2 Febrero    41500  35400      6300\n    3   Marzo    51200  35600      7100\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con las funciones del paquete `dplyr`.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-6_527abe9e5104c9cafa0726351efa811b'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        mutate(Impuestos = c(6450, 6300, 7100))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos\n    1   Enero    45000  33400      6450\n    2 Febrero    41500  35400      6300\n    3   Marzo    51200  35600      7100\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Añadir una nueva fila con los siguientes datos de Abril. \n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-7_76d4f38a42e45e404fd85af0f0c82f96'}\n    ::: {.cell-output-display}\n    \\begin{tabu} to \\linewidth {>{\\raggedright}X>{\\raggedleft}X>{\\raggedleft}X>{\\raggedleft}X}\n    \\hline\n    Mes & Ingresos & Gastos & Impuestos\\\\\n    \\hline\n    Abril & 49700 & 36300 & 6850\\\\\n    \\hline\n    \\end{tabu}\n    :::\n    :::\n\n\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1 \n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-8_6ec1101f508846abdd1e853580fed2b4'}\n    \n    ```{.r .cell-code}\n    df <- rbind(df, list(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos\n    1   Enero    45000  33400      6450\n    2 Febrero    41500  35400      6300\n    3   Marzo    51200  35600      7100\n    4   Abril    49700  36300      6850\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2 \n    Con las funciones del paquete `dplyr`.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-9_f03dde449f5125551b1e19c5e809c69f'}\n    \n    :::\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-10_ad30aa4bba19f1a2a7b7319fc53e4485'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        add_row(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850)\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos\n    1   Enero    45000  33400      6450\n    2 Febrero    41500  35400      6300\n    3   Marzo    51200  35600      7100\n    4   Abril    49700  36300      6850\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Cambiar los ingresos de Marzo por 50400. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-11_f86ca8e531426dabdc266ceb5d28f4ca'}\n    \n    ```{.r .cell-code}\n    df[3, \"Ingresos\"] <- 50400\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos\n    1   Enero    45000  33400      6450\n    2 Febrero    41500  35400      6300\n    3   Marzo    50400  35600      7100\n    4   Abril    49700  36300      6850\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con los beneficios de cada mes (ingresos - gastos - impuestos).\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-12_d34050f1dfa86898ab9a850a9cbbe0c1'}\n    \n    ```{.r .cell-code}\n    df$Beneficios <- df$Ingresos - df$Gastos - df$Impuestos\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos Beneficios\n    1   Enero    45000  33400      6450       5150\n    2 Febrero    41500  35400      6300       -200\n    3   Marzo    50400  35600      7100       7700\n    4   Abril    49700  36300      6850       6550\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con las funciones del paquete `dplyr`.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-13_5fca2e223aa688f407d3480eeaf11e7b'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        mutate(Beneficios = Ingresos - Gastos - Impuestos)\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos Beneficios\n    1   Enero    45000  33400      6450       5150\n    2 Febrero    41500  35400      6300       -200\n    3   Marzo    50400  35600      7100       7700\n    4   Abril    49700  36300      6850       6550\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con el factor `Balance` con dos posibles categorías: `positivo` si ha habido beneficios y `negativo` si ha habido pérdidas.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-14_8f0770090eb38b7e8e11e2c8d7061c45'}\n    \n    ```{.r .cell-code}\n    df$Balance <- cut(df$Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\"))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos Beneficios  Balance\n    1   Enero    45000  33400      6450       5150 positivo\n    2 Febrero    41500  35400      6300       -200 negativo\n    3   Marzo    50400  35600      7100       7700 positivo\n    4   Abril    49700  36300      6850       6550 positivo\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con las funciones del paquete `dplyr`.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-15_8b0cb66e0f35f2d530614237ca31033c'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        mutate(Balance = cut(Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\")))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Mes Ingresos Gastos Impuestos Beneficios  Balance\n    1   Enero    45000  33400      6450       5150 positivo\n    2 Febrero    41500  35400      6300       -200 negativo\n    3   Marzo    50400  35600      7100       7700 positivo\n    4   Abril    49700  36300      6850       6550 positivo\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el conjunto de datos para quedarse con los nombres de los meses y los beneficios de los meses con balance positivo. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-16_055e3b186a5bb167a77e5a83d258c84a'}\n    \n    ```{.r .cell-code}\n    df[df$Balance == \"positivo\", c(\"Mes\", \"Beneficios\")]\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n        Mes Beneficios\n    1 Enero       5150\n    3 Marzo       7700\n    4 Abril       6550\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con las funciones del paquete `dplyr`.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-17_e4a894a8f3bc0a9327fc064765c8b3dd'}\n    \n    ```{.r .cell-code}\n    df |>\n        filter(Balance == \"positivo\") |> \n        select(Mes, Beneficios)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n        Mes Beneficios\n    1 Enero       5150\n    2 Marzo       7700\n    3 Abril       6550\n    ```\n    :::\n    :::\n\n\n    :::\n:::\n\n:::{#exr-preprocesamiento-2}\nEl fichero [`colesterol.csv`](datos/colesterol.csv) contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\na.  Crear un data frame con los datos de todos los pacientes del estudio a partir del fichero [`colesterol.csv`](datos/colesterol.csv).\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-18_8412be7fdcc7852ba0fd5d2bb3c57913'}\n    \n    ```{.r .cell-code}\n    df <- read.csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\n    ```\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con la función [`read_csv`](https://readr.tidyverse.org/reference/read_delim.html) del paquete del paquete [`readr`](https://readr.tidyverse.org/index.html).\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-19_a502697c29e89acbce039913bc28f110'}\n    \n    ```{.r .cell-code}\n    df <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\n    ```\n    :::\n\n\n    :::\n\na.  Mostrar el contenido del data frame.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 1\n    Con las funciones básicas de R.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-20_aca0e5db8e34a5605a96a529c61746da'}\n    \n    ```{.r .cell-code}\n    df \n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 6\n       nombre                           edad sexo   peso altura colesterol\n       <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl>\n     1 José Luis Martínez Izquierdo       18 H        85   1.79        182\n     2 Rosa Díaz Díaz                     32 M        65   1.73        232\n     3 Javier García Sánchez              24 H        NA   1.81        191\n     4 Carmen López Pinzón                35 M        65   1.7         200\n     5 Marisa López Collado               46 M        51   1.58        148\n     6 Antonio Ruiz Cruz                  68 H        66   1.74        249\n     7 Antonio Fernández Ocaña            51 H        62   1.72        276\n     8 Pilar Martín González              22 M        60   1.66         NA\n     9 Pedro Gálvez Tenorio               35 H        90   1.94        241\n    10 Santiago Reillo Manzano            46 H        75   1.85        280\n    11 Macarena Álvarez Luna              53 M        55   1.62        262\n    12 José María de la Guía Sanz         58 H        78   1.87        198\n    13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210\n    14 Carolina Rubio Moreno              20 M        61   1.77        194\n    ```\n    :::\n    :::\n\n\n    :::\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución 2\n    Con la función [`glimpse`](https://dplyr.tidyverse.org/reference/glimpse.html?q=read_csv#undefined) del paquete [`dplyr`](https://dplyr.tidyverse.org/index.html). Esta función muestra las columnas del data frame en filas, de manera que permite ver todas las columnas de un data frame cuando este tiene muchas columnas.\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-21_4607fa6269771d81b835ae5f8c0f2c85'}\n    \n    ```{.r .cell-code}\n    glimpse(df)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Rows: 14\n    Columns: 6\n    $ nombre     <chr> \"José Luis Martínez Izquierdo\", \"Rosa Díaz Díaz\", \"Javier G~\n    $ edad       <dbl> 18, 32, 24, 35, 46, 68, 51, 22, 35, 46, 53, 58, 27, 20\n    $ sexo       <chr> \"H\", \"M\", \"H\", \"M\", \"M\", \"H\", \"H\", \"M\", \"H\", \"H\", \"M\", \"H\",~\n    $ peso       <dbl> 85, 65, NA, 65, 51, 66, 62, 60, 90, 75, 55, 78, 109, 61\n    $ altura     <dbl> 1.79, 1.73, 1.81, 1.70, 1.58, 1.74, 1.72, 1.66, 1.94, 1.85,~\n    $ colesterol <dbl> 182, 232, 191, 200, 148, 249, 276, NA, 241, 280, 262, 198, ~\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con el índice de masa corporal, usando la siguiente fórmula \n\n    $$\n    \\mbox{IMC} = \\frac{\\mbox{Peso (kg)}}{\\mbox{Altura (cm)}^2}\n    $$\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-22_8eabcb14c775c5c8a5ff7e6bad85973f'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        mutate(imc = round(peso/altura^2))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 7\n       nombre                           edad sexo   peso altura colesterol   imc\n       <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl>\n     1 José Luis Martínez Izquierdo       18 H        85   1.79        182    27\n     2 Rosa Díaz Díaz                     32 M        65   1.73        232    22\n     3 Javier García Sánchez              24 H        NA   1.81        191    NA\n     4 Carmen López Pinzón                35 M        65   1.7         200    22\n     5 Marisa López Collado               46 M        51   1.58        148    20\n     6 Antonio Ruiz Cruz                  68 H        66   1.74        249    22\n     7 Antonio Fernández Ocaña            51 H        62   1.72        276    21\n     8 Pilar Martín González              22 M        60   1.66         NA    22\n     9 Pedro Gálvez Tenorio               35 H        90   1.94        241    24\n    10 Santiago Reillo Manzano            46 H        75   1.85        280    22\n    11 Macarena Álvarez Luna              53 M        55   1.62        262    21\n    12 José María de la Guía Sanz         58 H        78   1.87        198    22\n    13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210    28\n    14 Carolina Rubio Moreno              20 M        61   1.77        194    19\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con la variable `obesidad` recodificando la columna `imc` en las siguientes categorías.\n\n    | Rango IMC | Categoría |\n    |:-|:-|\n    |Menor de 18.5 | Bajo peso |\n    |De 18.5 a 24.5 | Saludable |\n    |De 24.5 a 30 | Sobrepeso |\n    |Mayor de 30 | Obeso |\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-23_f82252502fd574b5fa81affbbbbee449'}\n    \n    ```{.r .cell-code}\n    df <- df |>\n        mutate(Obesidad = cut(imc, breaks = c(0, 18.5, 24.5, 30, Inf), labels = c(\"Bajo peso\", \"Saludable\", \"Sobrepeso\", \"Obeso\")))\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 8\n       nombre                      edad sexo   peso altura colesterol   imc Obesidad\n       <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n     1 José Luis Martínez Izquie~    18 H        85   1.79        182    27 Sobrepe~\n     2 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab~\n     3 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n     4 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab~\n     5 Marisa López Collado          46 M        51   1.58        148    20 Saludab~\n     6 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab~\n     7 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab~\n     8 Pilar Martín González         22 M        60   1.66         NA    22 Saludab~\n     9 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab~\n    10 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab~\n    11 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab~\n    12 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab~\n    13 Miguel Angel Cuadrado Gut~    27 H       109   1.98        210    28 Sobrepe~\n    14 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab~\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Seleccionar las columnas `nombre`, `sexo` y `edad`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-24_3b93c06c1876780b93ed271175556027'}\n    \n    ```{.r .cell-code}\n    df |>\n        select(nombre, sexo, edad)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 3\n       nombre                          sexo   edad\n       <chr>                           <chr> <dbl>\n     1 José Luis Martínez Izquierdo    H        18\n     2 Rosa Díaz Díaz                  M        32\n     3 Javier García Sánchez           H        24\n     4 Carmen López Pinzón             M        35\n     5 Marisa López Collado            M        46\n     6 Antonio Ruiz Cruz               H        68\n     7 Antonio Fernández Ocaña         H        51\n     8 Pilar Martín González           M        22\n     9 Pedro Gálvez Tenorio            H        35\n    10 Santiago Reillo Manzano         H        46\n    11 Macarena Álvarez Luna           M        53\n    12 José María de la Guía Sanz      H        58\n    13 Miguel Angel Cuadrado Gutiérrez H        27\n    14 Carolina Rubio Moreno           M        20\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Anonimizar los datos eliminando la columna `nombre`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-25_08711d472dc2b235f869e4a6ca75ba7c'}\n    \n    ```{.r .cell-code}\n    df |>\n        select(-nombre)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 7\n        edad sexo   peso altura colesterol   imc Obesidad \n       <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n     1    18 H        85   1.79        182    27 Sobrepeso\n     2    32 M        65   1.73        232    22 Saludable\n     3    24 H        NA   1.81        191    NA <NA>     \n     4    35 M        65   1.7         200    22 Saludable\n     5    46 M        51   1.58        148    20 Saludable\n     6    68 H        66   1.74        249    22 Saludable\n     7    51 H        62   1.72        276    21 Saludable\n     8    22 M        60   1.66         NA    22 Saludable\n     9    35 H        90   1.94        241    24 Saludable\n    10    46 H        75   1.85        280    22 Saludable\n    11    53 M        55   1.62        262    21 Saludable\n    12    58 H        78   1.87        198    22 Saludable\n    13    27 H       109   1.98        210    28 Sobrepeso\n    14    20 M        61   1.77        194    19 Saludable\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Reordenar las columnas poniendo la columna `sexo` antes que la columna `edad`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-26_1b393ce33571c274618d6913061b7d89'}\n    \n    ```{.r .cell-code}\n    df |>\n        select(nombre, sexo, edad, everything())\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 8\n       nombre                     sexo   edad  peso altura colesterol   imc Obesidad\n       <chr>                      <chr> <dbl> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n     1 José Luis Martínez Izquie~ H        18    85   1.79        182    27 Sobrepe~\n     2 Rosa Díaz Díaz             M        32    65   1.73        232    22 Saludab~\n     3 Javier García Sánchez      H        24    NA   1.81        191    NA <NA>    \n     4 Carmen López Pinzón        M        35    65   1.7         200    22 Saludab~\n     5 Marisa López Collado       M        46    51   1.58        148    20 Saludab~\n     6 Antonio Ruiz Cruz          H        68    66   1.74        249    22 Saludab~\n     7 Antonio Fernández Ocaña    H        51    62   1.72        276    21 Saludab~\n     8 Pilar Martín González      M        22    60   1.66         NA    22 Saludab~\n     9 Pedro Gálvez Tenorio       H        35    90   1.94        241    24 Saludab~\n    10 Santiago Reillo Manzano    H        46    75   1.85        280    22 Saludab~\n    11 Macarena Álvarez Luna      M        53    55   1.62        262    21 Saludab~\n    12 José María de la Guía Sanz H        58    78   1.87        198    22 Saludab~\n    13 Miguel Angel Cuadrado Gut~ H        27   109   1.98        210    28 Sobrepe~\n    14 Carolina Rubio Moreno      M        20    61   1.77        194    19 Saludab~\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el data frame para quedarse con las mujeres.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-27_c1bd407ccb1dfe8eef3596397cad392a'}\n    \n    ```{.r .cell-code}\n    df |>\n        filter(sexo == \"M\")\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 6 x 8\n      nombre                 edad sexo   peso altura colesterol   imc Obesidad \n      <chr>                 <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n    1 Rosa Díaz Díaz           32 M        65   1.73        232    22 Saludable\n    2 Carmen López Pinzón      35 M        65   1.7         200    22 Saludable\n    3 Marisa López Collado     46 M        51   1.58        148    20 Saludable\n    4 Pilar Martín González    22 M        60   1.66         NA    22 Saludable\n    5 Macarena Álvarez Luna    53 M        55   1.62        262    21 Saludable\n    6 Carolina Rubio Moreno    20 M        61   1.77        194    19 Saludable\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el data frame para quedarse con los hombres mayores de 30 años.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-28_a9e839e5dfce1f8c0372cee28a56a8dd'}\n    \n    ```{.r .cell-code}\n    df |>\n        filter( sexo == \"H\" & edad > 30)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 5 x 8\n      nombre                      edad sexo   peso altura colesterol   imc Obesidad \n      <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n    1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludable\n    2 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludable\n    3 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludable\n    4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludable\n    5 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludable\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el data frame para eliminar las filas con datos perdidos en la columna `colesterol`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-29_3dcceabd56c1b9a2f6b1e6c12027eed4'}\n    \n    ```{.r .cell-code}\n    df |>\n        filter(!is.na(colesterol))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 13 x 8\n       nombre                      edad sexo   peso altura colesterol   imc Obesidad\n       <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n     1 José Luis Martínez Izquie~    18 H        85   1.79        182    27 Sobrepe~\n     2 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab~\n     3 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n     4 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab~\n     5 Marisa López Collado          46 M        51   1.58        148    20 Saludab~\n     6 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab~\n     7 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab~\n     8 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab~\n     9 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab~\n    10 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab~\n    11 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab~\n    12 Miguel Angel Cuadrado Gut~    27 H       109   1.98        210    28 Sobrepe~\n    13 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab~\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Ordenar el data frame según la columna `nombre`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-30_bce5086dcfd3d5a8e104899d7ea8e6b8'}\n    \n    ```{.r .cell-code}\n    df |>\n        arrange(nombre)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 8\n       nombre                      edad sexo   peso altura colesterol   imc Obesidad\n       <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n     1 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab~\n     2 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab~\n     3 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab~\n     4 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab~\n     5 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n     6 José Luis Martínez Izquie~    18 H        85   1.79        182    27 Sobrepe~\n     7 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab~\n     8 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab~\n     9 Marisa López Collado          46 M        51   1.58        148    20 Saludab~\n    10 Miguel Angel Cuadrado Gut~    27 H       109   1.98        210    28 Sobrepe~\n    11 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab~\n    12 Pilar Martín González         22 M        60   1.66         NA    22 Saludab~\n    13 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab~\n    14 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab~\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Ordenar el data frame ascendentemente por la columna `sexo` y descendentemente por la columna `edad`.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-31_79a4cb3b9116610b6434e2ce3761860e'}\n    \n    ```{.r .cell-code}\n    df |>\n        arrange(sexo, desc(edad))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 14 x 8\n       nombre                      edad sexo   peso altura colesterol   imc Obesidad\n       <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n     1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab~\n     2 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab~\n     3 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab~\n     4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab~\n     5 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab~\n     6 Miguel Angel Cuadrado Gut~    27 H       109   1.98        210    28 Sobrepe~\n     7 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n     8 José Luis Martínez Izquie~    18 H        85   1.79        182    27 Sobrepe~\n     9 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab~\n    10 Marisa López Collado          46 M        51   1.58        148    20 Saludab~\n    11 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab~\n    12 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab~\n    13 Pilar Martín González         22 M        60   1.66         NA    22 Saludab~\n    14 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab~\n    ```\n    :::\n    :::\n\n\n    :::\n:::\n\n:::{#exr-preprocesamiento-3}\nEl fichero [`notas-curso2.csv`](datos/notas-curso2.csv) contiene las notas de las asignaturas de un curso en varios grupos de alumnos.\n\na.  Crear un data frame con los datos del curso a partir del fichero [`notas-curso2.csv`](datos/notas-curso2.csv).\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-32_047122514927cfe2814409bbc2af5434'}\n    \n    ```{.r .cell-code}\n    df <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/notas-curso2.csv\")\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 120 x 9\n       sexo   turno  grupo trabaja notaA notaB notaC notaD notaE\n       <chr>  <chr>  <chr> <chr>   <dbl> <dbl> <dbl> <dbl> <dbl>\n     1 Mujer  Tarde  C     N         5.2   6.3   3.4   2.3   2  \n     2 Hombre Mañana A     N         5.7   5.7   4.2   3.5   2.7\n     3 Hombre Mañana B     N         8.3   8.8   8.8   8     5.5\n     4 Hombre Mañana B     N         6.1   6.8   4     3.5   2.2\n     5 Hombre Mañana A     N         6.2   9     5     4.4   3.7\n     6 Hombre Mañana A     S         8.6   8.9   9.5   8.4   3.9\n     7 Mujer  Mañana A     N         6.7   7.9   5.6   4.8   4.2\n     8 Mujer  Tarde  C     S         4.1   5.2   1.7   0.3   1  \n     9 Hombre Tarde  C     N         5     5     3.3   2.7   6  \n    10 Hombre Tarde  C     N         5.3   6.3   4.8   3.6   2.3\n    # i 110 more rows\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Convertir el data frame a formato largo. \n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-33_668864a4db15639cc8ef215c5b549f96'}\n    \n    ```{.r .cell-code}\n    df_largo <- df |> pivot_longer(notaA:notaE, names_to = \"Asignatura\", values_to = \"Nota\")\n    df_largo\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 600 x 6\n       sexo   turno  grupo trabaja Asignatura  Nota\n       <chr>  <chr>  <chr> <chr>   <chr>      <dbl>\n     1 Mujer  Tarde  C     N       notaA        5.2\n     2 Mujer  Tarde  C     N       notaB        6.3\n     3 Mujer  Tarde  C     N       notaC        3.4\n     4 Mujer  Tarde  C     N       notaD        2.3\n     5 Mujer  Tarde  C     N       notaE        2  \n     6 Hombre Mañana A     N       notaA        5.7\n     7 Hombre Mañana A     N       notaB        5.7\n     8 Hombre Mañana A     N       notaC        4.2\n     9 Hombre Mañana A     N       notaD        3.5\n    10 Hombre Mañana A     N       notaE        2.7\n    # i 590 more rows\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con la variable `calificación` que contenga las calificaciones de cada asignatura.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-34_6d750b7d4523007bfee4153bfb229dc4'}\n    \n    ```{.r .cell-code}\n    df_largo <- df_largo |>\n        mutate(Califiación = cut(Nota, breaks = c(0, 4.99, 6.99, 8.99, 10), labels = c(\"SS\", \"AP\", \"NT\", \"SB\")))\n    df_largo\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 600 x 7\n       sexo   turno  grupo trabaja Asignatura  Nota Califiación\n       <chr>  <chr>  <chr> <chr>   <chr>      <dbl> <fct>      \n     1 Mujer  Tarde  C     N       notaA        5.2 AP         \n     2 Mujer  Tarde  C     N       notaB        6.3 AP         \n     3 Mujer  Tarde  C     N       notaC        3.4 SS         \n     4 Mujer  Tarde  C     N       notaD        2.3 SS         \n     5 Mujer  Tarde  C     N       notaE        2   SS         \n     6 Hombre Mañana A     N       notaA        5.7 AP         \n     7 Hombre Mañana A     N       notaB        5.7 AP         \n     8 Hombre Mañana A     N       notaC        4.2 SS         \n     9 Hombre Mañana A     N       notaD        3.5 SS         \n    10 Hombre Mañana A     N       notaE        2.7 SS         \n    # i 590 more rows\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el conjunto de datos para obtener las asignaturas y las notas de las mujeres del grupo A, ordenadas de mayor a menor.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución\n\n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-35_13d39dd3eed9a47e890ea1193fc3a71c'}\n    \n    ```{.r .cell-code}\n    df_largo |>\n        filter(sexo == \"Mujer\", grupo == \"A\") |>\n        select(Asignatura, Nota) |>\n        arrange(desc(Nota))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 75 x 2\n       Asignatura  Nota\n       <chr>      <dbl>\n     1 notaB        9.2\n     2 notaE        9.2\n     3 notaB        8.8\n     4 notaB        8.6\n     5 notaB        8.6\n     6 notaA        8.3\n     7 notaB        8.2\n     8 notaB        8.1\n     9 notaA        8  \n    10 notaB        8  \n    # i 65 more rows\n    ```\n    :::\n    :::\n\n\n    :::\n:::\n\n## Ejercicios Propuestos\n\n:::{#exr-preprocesaimento-5}\nLa siguiente tabla recoge las notas de los alumnos de un curso con dos asignaturas. \n\n| Alumno | Sexo | Física | Química |\n|:-|:-:|:-:|:-:|\n| Carlos | H | 6.7 | 8.1 |\n| María | M | 7.2 | 9.5 |\n| Carmen | M | 5.5 | 5 |\n| Pedro | H |  | 4.5 |\n| Luis | H | 3.5 | 5 |\n| Sara | M | 6.2 | 4 |\n\na.  Definir cuatro vectores con el nombre, el sexo y las notas de Física y Química.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-36_85af5032bf1791e5e48c6e952c82a010'}\n    \n    ```{.r .cell-code}\n    nombre <- c(\"Carlos\", \"María\", \"Carmen\", \"Pedro\", \"Luis\", \"Sara\")\n    sexo <- c(\"H\", \"M\", \"M\", \"H\", \"H\", \"M\")\n    fisica <- c(6.7, 7.2, 5.5, NA, 3.5, 6.2)\n    quimica <- c(8.1, 9.5, 5, 4.5, 5, 4)\n    ```\n    :::\n\n\n    :::\n\na.  Convertir el sexo en un factor y mostrar sus niveles.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-37_12fede0daf5d2eccc74c61c42725feed'}\n    \n    ```{.r .cell-code}\n    sexo <- factor(sexo)\n    levels(sexo)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] \"H\" \"M\"\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear un data frame con el nombre, sexo y las notas de Física y Química.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-38_28d48fc8377853b79671f024794ce81e'}\n    \n    ```{.r .cell-code}\n    df <- data.frame(nombre, sexo, fisica, quimica)\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n      nombre sexo fisica quimica\n    1 Carlos    H    6.7     8.1\n    2  María    M    7.2     9.5\n    3 Carmen    M    5.5     5.0\n    4  Pedro    H     NA     4.5\n    5   Luis    H    3.5     5.0\n    6   Sara    M    6.2     4.0\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna con la nota media de Física y Química.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-39_e0eeacbcf0fc6fc8083db7d6dfc411d9'}\n    \n    ```{.r .cell-code}\n    df$media <- (df$fisica + df$quimica) / 2\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n      nombre sexo fisica quimica media\n    1 Carlos    H    6.7     8.1  7.40\n    2  María    M    7.2     9.5  8.35\n    3 Carmen    M    5.5     5.0  5.25\n    4  Pedro    H     NA     4.5    NA\n    5   Luis    H    3.5     5.0  4.25\n    6   Sara    M    6.2     4.0  5.10\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Crear una nueva columna booleana `aprobado` que tenga el valor `TRUE` si la media es mayor o igual que 5 y `FALSE` en caso contrario.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-40_582cb0b80ca7a3d0d0d5a13a74002775'}\n    \n    ```{.r .cell-code}\n    df$aprobado <- df$media >= 5\n    df\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n      nombre sexo fisica quimica media aprobado\n    1 Carlos    H    6.7     8.1  7.40     TRUE\n    2  María    M    7.2     9.5  8.35     TRUE\n    3 Carmen    M    5.5     5.0  5.25     TRUE\n    4  Pedro    H     NA     4.5    NA       NA\n    5   Luis    H    3.5     5.0  4.25    FALSE\n    6   Sara    M    6.2     4.0  5.10     TRUE\n    ```\n    :::\n    :::\n\n\n    :::\n\na.  Filtrar el data frame para quedarse con el nombre y la media de las mujeres que han aprobado.\n\n    :::{.callout-tip collapse=\"true\"}\n    ## Solución \n\n\n    ::: {.cell hash='02-preprocesamiento-datos_cache/pdf/unnamed-chunk-41_682e6707df37ac342e881d13c2c0a29e'}\n    \n    ```{.r .cell-code}\n    df[df$sexo == \"M\" & df$media >= 5, c(\"nombre\", \"media\")]\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n      nombre media\n    2  María  8.35\n    3 Carmen  5.25\n    6   Sara  5.10\n    ```\n    :::\n    :::\n\n\n    :::\n:::\n\n\n:::{#exr-preprocesamiento-5}\nSe ha diseñado un ensayo clínico aleatorizado, doble-ciego y controlado con placebo, para estudiar el efecto de dos alternativas terapéuticas en el control de la hipertensión\narterial. Se han reclutado 100 pacientes hipertensos y estos han sido distribuidos aleatoriamente en tres grupos de tratamiento. A uno de los grupos (control) se le administró un placebo, a otro grupo se le administró un inhibidor de la enzima conversora de la angiotensina (IECA) y al otro un tratamiento combinado de un diurético y un Antagonista del Calcio. Las variables respuesta final fueron las presiones arteriales sistólica y diastólica.\n\nLos datos con las claves de aleatorización han sido introducidos en una base de datos que reside en la central de aleatorización,\nmientras que los datos clínicos han sido archivados en dos archivos distintos, uno para cada uno de los dos centros\nparticipantes en el estudio.\n\nLas variables almacenadas en estos archivos clínicos son las\nsiguientes:\n\n- CLAVE: Clave de aleatorización\n- NOMBRE: Iniciales del paciente\n- F\\_NACIM: Fecha de Nacimiento\n- F\\_INCLUS: Fecha de inclusión\n- SEXO: Sexo (0: Hombre 1: Mujer)\n- ALTURA: Altura en cm.\n- PESO: Peso en Kg.\n- PAD\\_INI: Presión diastólica basal (inicial)\n- PAD\\_FIN: Presión diastólica final\n- PAS\\_INI: Presión sistólica basal (inicial)\n- PAS\\_FIN:  Presión sistólica final\n\nEl archivo de claves de aleatorización contiene sólo dos variables.\n\n- CLAVE: Clave de aleatorización\n- FARMACO: Fármaco administrado (0: Placebo, 1: IECA,  2:Ca Antagonista + diurético)\n\na.  Crear un data frame con los datos de los pacientes del hospital A (fichero de csv [datos-hospital-a.csv](datos/hipertension/datos-hospital-a.csv)).\n\na.  Crear un data frame con los datos de los pacientes del hospital B (fichero csv [datos-hospital-b.csv](datos/hipertension/datos-hospital-b.csv)).\n\na.  Fusionar los datos de los dos hospitales en un nuevo data frame.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Para fusionar las filas de dos data frames con las mismas columnas usar la función [`rbind`](https://aprendeconalf.es/manual-r/03-tipos-datos-estructurados.html#a%C3%B1adir-elementos-a-un-data-frame).\n    :::\n\na.  Crear un data frame con los datos de las claves de aleatorización (fichero csv [claves-aleatorizacion.csv](datos/hipertension/claves-aleatorizacion.csv))\n\na.  Fusionar el data frame con los datos clínicos y el data frame con claves de aleatorización en un nuevo data frame.\n\n    :::{.callout-note collapse=\"true\"}\n    ## Ayuda\n    Para fusionar las columnas de dos data frames usando una misma columna como clave en ambos data frames usar la función [`left_join`](https://dtplyr.tidyverse.org/reference/left_join.dtplyr_step.html) del paquete `dplyr`.\n    :::\n\na.  Convertir en un factor el sexo.\n\na.  Crear una nueva columna para la evolución de la presión arterial diastólica restando las columnas `PAS_FIN` y `PAS_FIN`.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}