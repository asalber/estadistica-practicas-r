[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prácticas de Estadística con R",
    "section": "",
    "text": "¡Bienvenido a Prácticas de Estadística con R!\nEste libro presenta una recopilación de prácticas de Estadística Descriptiva e Inferencial con el lenguaje de programación R, con problemas aplicados a las Ciencias y las Ingenierías.\nNo es un libro para aprender a programar con R, ya que solo enseña el uso del lenguaje y de algunos de sus paquetes para resolver problemas de Estadística. Para quienes estén interesados en aprender a programar en este lenguaje, os recomiendo leer este manual de R."
  },
  {
    "objectID": "index.html#capítulos",
    "href": "index.html#capítulos",
    "title": "Prácticas de Estadística con R",
    "section": "Capítulos",
    "text": "Capítulos\n\n\n\n\n\n\n\nDistribuciones de frecuencias y representaciones gráficas\n\n\n\n\n\n\n\n\n\n\nEstadística Descriptiva\n\n\n\n\n\n\n\n\n\n\nIntroducción a R\n\n\n\n\n\n\n\n\n\n\nPreprocesamiento de datos\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#licencia",
    "href": "index.html#licencia",
    "title": "Prácticas de Estadística con R",
    "section": "Licencia",
    "text": "Licencia\nEsta obra está bajo una licencia Reconocimiento – No comercial – Compartir bajo la misma licencia 3.0 España de Creative Commons. Para ver una copia de esta licencia, visite https://creativecommons.org/licenses/by-nc-sa/3.0/es/.\nCon esta licencia eres libre de:\n\nCopiar, distribuir y mostrar este trabajo.\nRealizar modificaciones de este trabajo.\n\nBajo las siguientes condiciones:\n\nReconocimiento. Debe reconocer los créditos de la obra de la manera especificada por el autor o el licenciador (pero no de una manera que sugiera que tiene su apoyo o apoyan el uso que hace de su obra).\nNo comercial. No puede utilizar esta obra para fines comerciales.\nCompartir bajo la misma licencia. Si altera o transforma esta obra, o genera una obra derivada, sólo puede distribuir la obra generada bajo una licencia idéntica a ésta.\n\nAl reutilizar o distribuir la obra, tiene que dejar bien claro los términos de la licencia de esta obra.\nEstas condiciones pueden no aplicarse si se obtiene el permiso del titular de los derechos de autor.\nNada en esta licencia menoscaba o restringe los derechos morales del autor."
  },
  {
    "objectID": "01-intro.html#instalación-de-r",
    "href": "01-intro.html#instalación-de-r",
    "title": "1  Introducción a R",
    "section": "1.1 Instalación de R",
    "text": "1.1 Instalación de R\nR puede descargarse desde el sitio web oficial de R o desde el repositorio principal de paquetes de R CRAN. Basta con descargar el archivo de instalación correspondiente al sistema operativo de nuestro ordenador y realizar la instalación como cualquier otro programa.\nEl intérprete de R se arranca desde la terminal, aunque en Windows incorpora su propia aplicación, pero es muy básica. En general, para trabajos serios, conviene utilizar un entorno de desarrollo para R."
  },
  {
    "objectID": "01-intro.html#entornos-de-desarrollo",
    "href": "01-intro.html#entornos-de-desarrollo",
    "title": "1  Introducción a R",
    "section": "1.2 Entornos de desarrollo",
    "text": "1.2 Entornos de desarrollo\nPor defecto el entorno de trabajo de R es en línea de comandos, lo que significa que los cálculos y los análisis se realizan mediante comandos o instrucciones que el usuario teclea en una ventana de texto. No obstante, existen distintas interfaces gráficas de usuario que facilitan su uso, sobre todo para usuarios noveles. Algunas de ellas, como las que se enumeran a continuación, son completos entornos de desarrollo que facilitan la gestión de cualquier proyecto:\n\nRStudio. Probablemente el entorno de desarrollo más extendido para programar con R ya que incorpora multitud de utilidades para facilitar la programación con R.\nRKWard. Es otra otro de los entornos de desarrollo más completos que además incluye a posibilidad de añadir nuevos menús y cuadros de diálogo personalizados.\nVisual Studio Code. Es un entorno de desarrollo de propósito general ampliamente extendido. Aunque no es un entorno de desarrollo específico para R, incluye una extensión con utilidades que facilitan mucho el desarrollo con R."
  },
  {
    "objectID": "02-preprocesamiento-datos.html#ejercicios-resueltos",
    "href": "02-preprocesamiento-datos.html#ejercicios-resueltos",
    "title": "2  Preprocesamiento de datos",
    "section": "2.1 Ejercicios Resueltos",
    "text": "2.1 Ejercicios Resueltos\nPara la realización de esta práctica se requieren los paquetes readr y dplyr de la colección de paquetes tidyverse.\n\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\n\n\nEjercicio 2.1 La siguiente tabla contiene los ingresos y gastos de una empresa durante el primer trimestre del año.\n\n\n\n\n \n  \n    Mes \n    Ingresos \n    Gastos \n    Impuestos \n  \n \n\n  \n    Enero \n    45000 \n    33400 \n    6450 \n  \n  \n    Febrero \n    41500 \n    35400 \n    6300 \n  \n  \n    Marzo \n    51200 \n    35600 \n    7100 \n  \n\n\n\n\n\n\nCrear un data frame con los datos de la tabla.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(\n    Mes = c(\"Enero\", \"Febrero\", \"Marzo\"),\n    Ingresos = c(45000, 41500, 51200),\n    Gastos = c(33400, 35400, 35600)\n    )\ndf \n\n      Mes Ingresos Gastos\n1   Enero    45000  33400\n2 Febrero    41500  35400\n3   Marzo    51200  35600\n\n\n\n\n\n\nAñadir una nueva columna con los siguientes impuestos pagados.\n\n\n\n\n\n \n  \n    Mes \n    Impuestos \n  \n \n\n  \n    Enero \n    6450 \n  \n  \n    Febrero \n    6300 \n  \n  \n    Marzo \n    7100 \n  \n\n\n\n\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Impuestos <- c(6450, 6300, 7100)\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Impuestos = c(6450, 6300, 7100))\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n\n\n\n\n\n\nAñadir una nueva fila con los siguientes datos de Abril.\n\n\n\n\n\n \n  \n    Mes \n    Ingresos \n    Gastos \n    Impuestos \n  \n \n\n  \n    Abril \n    49700 \n    36300 \n    6850 \n  \n\n\n\n\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf <- rbind(df, list(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850))\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\n\n\n\ndf <- df %>%\n    add_row(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850)\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\nCambiar los ingresos de Marzo por 50400.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf[3, \"Ingresos\"] <- 50400\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    50400  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\nCrear una nueva columna con los beneficios de cada mes (ingresos - gastos - impuestos).\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Beneficios <- df$Ingresos - df$Gastos - df$Impuestos\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Beneficios = Ingresos - Gastos - Impuestos)\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n\n\n\n\n\n\nCrear una nueva columna con el factor Balance con dos posibles categorías: positivo si ha habido beneficios y negativo si ha habido pérdidas.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Balance <- cut(df$Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\"))\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Balance = cut(Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\")))\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n\n\n\n\n\n\nFiltrar el conjunto de datos para quedarse con los nombres de los meses y los beneficios de los meses con balance positivo.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf[df$Balance == \"positivo\", c(\"Mes\", \"Beneficios\")]\n\n    Mes Beneficios\n1 Enero       5150\n3 Marzo       7700\n4 Abril       6550\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf %>%\n    filter(Balance == \"positivo\") %>% \n    select(Mes, Beneficios)\n\n    Mes Beneficios\n1 Enero       5150\n2 Marzo       7700\n3 Abril       6550\n\n\n\n\n\n\n\nEjercicio 2.2 El fichero colesterol.csv contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\nCrear un data frame con los datos de todos los pacientes del estudio a partir del fichero colesterol.csv.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf <- read.csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\ndf\n\n                            nombre edad sexo peso altura colesterol\n1     José Luis Martínez Izquierdo   18    H   85   1.79        182\n2                   Rosa Díaz Díaz   32    M   65   1.73        232\n3            Javier García Sánchez   24    H   NA   1.81        191\n4              Carmen López Pinzón   35    M   65   1.70        200\n5             Marisa López Collado   46    M   51   1.58        148\n6                Antonio Ruiz Cruz   68    H   66   1.74        249\n7          Antonio Fernández Ocaña   51    H   62   1.72        276\n8            Pilar Martín González   22    M   60   1.66         NA\n9             Pedro Gálvez Tenorio   35    H   90   1.94        241\n10         Santiago Reillo Manzano   46    H   75   1.85        280\n11           Macarena Álvarez Luna   53    M   55   1.62        262\n12      José María de la Guía Sanz   58    H   78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez   27    H  109   1.98        210\n14           Carolina Rubio Moreno   20    M   61   1.77        194\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete readr.\n\ndf <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\ndf\n\n# A tibble: 14 × 6\n   nombre                           edad sexo   peso altura colesterol\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232\n 3 Javier García Sánchez              24 H        NA   1.81        191\n 4 Carmen López Pinzón                35 M        65   1.7         200\n 5 Marisa López Collado               46 M        51   1.58        148\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276\n 8 Pilar Martín González              22 M        60   1.66         NA\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241\n10 Santiago Reillo Manzano            46 H        75   1.85        280\n11 Macarena Álvarez Luna              53 M        55   1.62        262\n12 José María de la Guía Sanz         58 H        78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210\n14 Carolina Rubio Moreno              20 M        61   1.77        194\n\n\n\n\n\n\nCrear una nueva columna con el índice de masa corporal, usando la siguiente fórmula\n\n\\[\n\\mbox{IMC} = \\frac{\\mbox{Peso (kg)}}{\\mbox{Altura (cm)}^2}\n\\]\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- df %>%\n    mutate(imc = round(peso/altura^2))\ndf\n\n# A tibble: 14 × 7\n   nombre                           edad sexo   peso altura colesterol   imc\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182    27\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232    22\n 3 Javier García Sánchez              24 H        NA   1.81        191    NA\n 4 Carmen López Pinzón                35 M        65   1.7         200    22\n 5 Marisa López Collado               46 M        51   1.58        148    20\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249    22\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276    21\n 8 Pilar Martín González              22 M        60   1.66         NA    22\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241    24\n10 Santiago Reillo Manzano            46 H        75   1.85        280    22\n11 Macarena Álvarez Luna              53 M        55   1.62        262    21\n12 José María de la Guía Sanz         58 H        78   1.87        198    22\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210    28\n14 Carolina Rubio Moreno              20 M        61   1.77        194    19\n\n\n\n\n\n\nCrear una nueva columna con la variable obesidad recodificando la columna imc en las siguientes categorías.\n\n\n\n\nRango IMC\nCategoría\n\n\n\n\nMenor de 18.5\nBajo peso\n\n\nDe 18.5 a 24.5\nSaludable\n\n\nDe 24.5 a 30\nSobrepeso\n\n\nMayor de 30\nObeso\n\n\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- df %>%\n    mutate(Obesidad = cut(imc, breaks = c(0, 18.5, 24.5, 30, Inf), labels = c(\"Bajo peso\", \"Saludable\", \"Sobrepeso\", \"Obeso\")))\ndf\n\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n 3 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 5 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 8 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n 9 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n10 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n11 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n12 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n13 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n14 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n\n\n\n\n\n\nSeleccionar las columnas nombre, sexo y edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(nombre, sexo, edad)\n\n# A tibble: 14 × 3\n   nombre                          sexo   edad\n   <chr>                           <chr> <dbl>\n 1 José Luis Martínez Izquierdo    H        18\n 2 Rosa Díaz Díaz                  M        32\n 3 Javier García Sánchez           H        24\n 4 Carmen López Pinzón             M        35\n 5 Marisa López Collado            M        46\n 6 Antonio Ruiz Cruz               H        68\n 7 Antonio Fernández Ocaña         H        51\n 8 Pilar Martín González           M        22\n 9 Pedro Gálvez Tenorio            H        35\n10 Santiago Reillo Manzano         H        46\n11 Macarena Álvarez Luna           M        53\n12 José María de la Guía Sanz      H        58\n13 Miguel Angel Cuadrado Gutiérrez H        27\n14 Carolina Rubio Moreno           M        20\n\n\n\n\n\n\nAnonimizar los datos eliminando la columna nombre.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(-nombre)\n\n# A tibble: 14 × 7\n    edad sexo   peso altura colesterol   imc Obesidad \n   <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n 1    18 H        85   1.79        182    27 Sobrepeso\n 2    32 M        65   1.73        232    22 Saludable\n 3    24 H        NA   1.81        191    NA <NA>     \n 4    35 M        65   1.7         200    22 Saludable\n 5    46 M        51   1.58        148    20 Saludable\n 6    68 H        66   1.74        249    22 Saludable\n 7    51 H        62   1.72        276    21 Saludable\n 8    22 M        60   1.66         NA    22 Saludable\n 9    35 H        90   1.94        241    24 Saludable\n10    46 H        75   1.85        280    22 Saludable\n11    53 M        55   1.62        262    21 Saludable\n12    58 H        78   1.87        198    22 Saludable\n13    27 H       109   1.98        210    28 Sobrepeso\n14    20 M        61   1.77        194    19 Saludable\n\n\n\n\n\n\nReordenar las columnas poniendo la columna sexo antes que la columna edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(nombre, sexo, edad, everything())\n\n# A tibble: 14 × 8\n   nombre                         sexo   edad  peso altura coles…¹   imc Obesi…²\n   <chr>                          <chr> <dbl> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo   H        18    85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                 M        32    65   1.73     232    22 Saluda…\n 3 Javier García Sánchez          H        24    NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón            M        35    65   1.7      200    22 Saluda…\n 5 Marisa López Collado           M        46    51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz              H        68    66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña        H        51    62   1.72     276    21 Saluda…\n 8 Pilar Martín González          M        22    60   1.66      NA    22 Saluda…\n 9 Pedro Gálvez Tenorio           H        35    90   1.94     241    24 Saluda…\n10 Santiago Reillo Manzano        H        46    75   1.85     280    22 Saluda…\n11 Macarena Álvarez Luna          M        53    55   1.62     262    21 Saluda…\n12 José María de la Guía Sanz     H        58    78   1.87     198    22 Saluda…\n13 Miguel Angel Cuadrado Gutiérr… H        27   109   1.98     210    28 Sobrep…\n14 Carolina Rubio Moreno          M        20    61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n\n\n\n\n\n\nFiltrar el data frame para quedarse con las mujeres.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter(sexo == \"M\")\n\n# A tibble: 6 × 8\n  nombre                 edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                 <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Rosa Díaz Díaz           32 M        65   1.73        232    22 Saludable\n2 Carmen López Pinzón      35 M        65   1.7         200    22 Saludable\n3 Marisa López Collado     46 M        51   1.58        148    20 Saludable\n4 Pilar Martín González    22 M        60   1.66         NA    22 Saludable\n5 Macarena Álvarez Luna    53 M        55   1.62        262    21 Saludable\n6 Carolina Rubio Moreno    20 M        61   1.77        194    19 Saludable\n\n\n\n\n\n\nFiltrar el data frame para quedarse con los hombres mayores de 30 años.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter( sexo == \"H\" & edad > 30)\n\n# A tibble: 5 × 8\n  nombre                      edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludable\n2 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludable\n3 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludable\n4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludable\n5 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludable\n\n\n\n\n\n\nFiltrar el data frame para eliminar las filas con datos perdidos en la columna colesterol.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter(!is.na(colesterol))\n\n# A tibble: 13 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 2 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n 3 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 4 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 5 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n 6 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 7 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 8 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n 9 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n10 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n11 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n12 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n13 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n\n\n\n\n\n\nOrdenar el data frame según la columna nombre.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    arrange(nombre)\n\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 2 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 3 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n 4 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n 5 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 6 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 7 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n 8 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n 9 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n10 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n11 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n12 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n13 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n14 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n\n\n\n\n\n\nOrdenar el data frame ascendentemente por la columna sexo y descendentemente por la columna edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    arrange(sexo, desc(edad))\n\n# A tibble: 14 × 8\n   nombre                          edad sexo   peso altura coles…¹   imc Obesi…²\n   <chr>                          <dbl> <chr> <dbl>  <dbl>   <dbl> <dbl> <fct>  \n 1 Antonio Ruiz Cruz                 68 H        66   1.74     249    22 Saluda…\n 2 José María de la Guía Sanz        58 H        78   1.87     198    22 Saluda…\n 3 Antonio Fernández Ocaña           51 H        62   1.72     276    21 Saluda…\n 4 Santiago Reillo Manzano           46 H        75   1.85     280    22 Saluda…\n 5 Pedro Gálvez Tenorio              35 H        90   1.94     241    24 Saluda…\n 6 Miguel Angel Cuadrado Gutiérr…    27 H       109   1.98     210    28 Sobrep…\n 7 Javier García Sánchez             24 H        NA   1.81     191    NA <NA>   \n 8 José Luis Martínez Izquierdo      18 H        85   1.79     182    27 Sobrep…\n 9 Macarena Álvarez Luna             53 M        55   1.62     262    21 Saluda…\n10 Marisa López Collado              46 M        51   1.58     148    20 Saluda…\n11 Carmen López Pinzón               35 M        65   1.7      200    22 Saluda…\n12 Rosa Díaz Díaz                    32 M        65   1.73     232    22 Saluda…\n13 Pilar Martín González             22 M        60   1.66      NA    22 Saluda…\n14 Carolina Rubio Moreno             20 M        61   1.77     194    19 Saluda…\n# … with abbreviated variable names ¹​colesterol, ²​Obesidad\n\n\n\n\n\n\n\nEjercicio 2.3 El fichero notas-curso2.csv contiene las notas de las asignaturas de un curso en varios grupos de alumnos.\n\nCrear un data frame con los datos del curso a partir del fichero notas-curso2.csv.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- read_csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/notas-curso2.csv\")\ndf\n\n# A tibble: 120 × 9\n   sexo   turno  grupo trabaja notaA notaB notaC notaD notaE\n   <chr>  <chr>  <chr> <chr>   <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 Mujer  Tarde  C     N         5.2   6.3   3.4   2.3   2  \n 2 Hombre Mañana A     N         5.7   5.7   4.2   3.5   2.7\n 3 Hombre Mañana B     N         8.3   8.8   8.8   8     5.5\n 4 Hombre Mañana B     N         6.1   6.8   4     3.5   2.2\n 5 Hombre Mañana A     N         6.2   9     5     4.4   3.7\n 6 Hombre Mañana A     S         8.6   8.9   9.5   8.4   3.9\n 7 Mujer  Mañana A     N         6.7   7.9   5.6   4.8   4.2\n 8 Mujer  Tarde  C     S         4.1   5.2   1.7   0.3   1  \n 9 Hombre Tarde  C     N         5     5     3.3   2.7   6  \n10 Hombre Tarde  C     N         5.3   6.3   4.8   3.6   2.3\n# … with 110 more rows\n\n\n\n\n\n\nConvertir el data frame a formato largo.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf_largo <- df %>% pivot_longer(notaA:notaE, names_to = \"Asignatura\", values_to = \"Nota\")\ndf_largo\n\n# A tibble: 600 × 6\n   sexo   turno  grupo trabaja Asignatura  Nota\n   <chr>  <chr>  <chr> <chr>   <chr>      <dbl>\n 1 Mujer  Tarde  C     N       notaA        5.2\n 2 Mujer  Tarde  C     N       notaB        6.3\n 3 Mujer  Tarde  C     N       notaC        3.4\n 4 Mujer  Tarde  C     N       notaD        2.3\n 5 Mujer  Tarde  C     N       notaE        2  \n 6 Hombre Mañana A     N       notaA        5.7\n 7 Hombre Mañana A     N       notaB        5.7\n 8 Hombre Mañana A     N       notaC        4.2\n 9 Hombre Mañana A     N       notaD        3.5\n10 Hombre Mañana A     N       notaE        2.7\n# … with 590 more rows\n\n\n\n\n\n\nCrear una nueva columna con la variable calificación que contenga las calificaciones de cada asignatura.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf_largo <- df_largo %>%\n    mutate(Califiación = cut(Nota, breaks = c(0, 4.99, 6.99, 8.99, 10), labels = c(\"SS\", \"AP\", \"NT\", \"SB\")))\ndf_largo\n\n# A tibble: 600 × 7\n   sexo   turno  grupo trabaja Asignatura  Nota Califiación\n   <chr>  <chr>  <chr> <chr>   <chr>      <dbl> <fct>      \n 1 Mujer  Tarde  C     N       notaA        5.2 AP         \n 2 Mujer  Tarde  C     N       notaB        6.3 AP         \n 3 Mujer  Tarde  C     N       notaC        3.4 SS         \n 4 Mujer  Tarde  C     N       notaD        2.3 SS         \n 5 Mujer  Tarde  C     N       notaE        2   SS         \n 6 Hombre Mañana A     N       notaA        5.7 AP         \n 7 Hombre Mañana A     N       notaB        5.7 AP         \n 8 Hombre Mañana A     N       notaC        4.2 SS         \n 9 Hombre Mañana A     N       notaD        3.5 SS         \n10 Hombre Mañana A     N       notaE        2.7 SS         \n# … with 590 more rows\n\n\n\n\n\n\nFiltrar el conjunto de datos para obtener las asignaturas y las notas de las mujeres del grupo A, ordenadas de mayor a menor.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf_largo %>%\n    filter(sexo == \"Mujer\", grupo == \"A\") %>%\n    select(Asignatura, Nota) %>%\n    arrange(desc(Nota))\n\n# A tibble: 75 × 2\n   Asignatura  Nota\n   <chr>      <dbl>\n 1 notaB        9.2\n 2 notaE        9.2\n 3 notaB        8.8\n 4 notaB        8.6\n 5 notaB        8.6\n 6 notaA        8.3\n 7 notaB        8.2\n 8 notaB        8.1\n 9 notaA        8  \n10 notaB        8  \n# … with 65 more rows"
  },
  {
    "objectID": "02-preprocesamiento-datos.html#ejercicios-propuestos",
    "href": "02-preprocesamiento-datos.html#ejercicios-propuestos",
    "title": "2  Preprocesamiento de datos",
    "section": "2.2 Ejercicios Propuestos",
    "text": "2.2 Ejercicios Propuestos\n\nEjercicio 2.4 La siguiente tabla recoge las notas de los alumnos de un curso con dos asignaturas.\n\n\n\nAlumno\nSexo\nFísica\nQuímica\n\n\n\n\nCarlos\nH\n6.7\n8.1\n\n\nMaría\nM\n7.2\n9.5\n\n\nCarmen\nM\n5.5\n5\n\n\nPedro\nH\n\n4.5\n\n\nLuis\nH\n3.5\n5\n\n\nSara\nM\n6.2\n4\n\n\n\n\nDefinir cuatro vectores con el nombre, el sexo y las notas de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nnombre <- c(\"Carlos\", \"María\", \"Carmen\", \"Pedro\", \"Luis\", \"Sara\")\nsexo <- c(\"H\", \"M\", \"M\", \"H\", \"H\", \"M\")\nfisica <- c(6.7, 7.2, 5.5, NA, 3.5, 6.2)\nquimica <- c(8.1, 9.5, 5, 4.5, 5, 4)\n\n\n\n\n\nConvertir el sexo en un factor y mostrar sus niveles.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nsexo <- factor(sexo)\nlevels(sexo)\n\n[1] \"H\" \"M\"\n\n\n\n\n\n\nCrear un data frame con el nombre, sexo y las notas de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(nombre, sexo, fisica, quimica)\ndf\n\n  nombre sexo fisica quimica\n1 Carlos    H    6.7     8.1\n2  María    M    7.2     9.5\n3 Carmen    M    5.5     5.0\n4  Pedro    H     NA     4.5\n5   Luis    H    3.5     5.0\n6   Sara    M    6.2     4.0\n\n\n\n\n\n\nCrear una nueva columna con la nota media de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf$media <- (df$fisica + df$quimica) / 2\ndf\n\n  nombre sexo fisica quimica media\n1 Carlos    H    6.7     8.1  7.40\n2  María    M    7.2     9.5  8.35\n3 Carmen    M    5.5     5.0  5.25\n4  Pedro    H     NA     4.5    NA\n5   Luis    H    3.5     5.0  4.25\n6   Sara    M    6.2     4.0  5.10\n\n\n\n\n\n\nCrear una nueva columna booleana aprobado que tenga el valor TRUE si la media es mayor o igual que 5 y FALSE en caso contrario.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf$aprobado <- df$media >= 5\ndf\n\n  nombre sexo fisica quimica media aprobado\n1 Carlos    H    6.7     8.1  7.40     TRUE\n2  María    M    7.2     9.5  8.35     TRUE\n3 Carmen    M    5.5     5.0  5.25     TRUE\n4  Pedro    H     NA     4.5    NA       NA\n5   Luis    H    3.5     5.0  4.25    FALSE\n6   Sara    M    6.2     4.0  5.10     TRUE\n\n\n\n\n\n\nFiltrar el data frame para quedarse con el nombre y la media de las mujeres que han aprobado.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf[df$sexo == \"M\" & df$media >= 5, c(\"nombre\", \"media\")]\n\n  nombre media\n2  María  8.35\n3 Carmen  5.25\n6   Sara  5.10\n\n\n\n\n\n\n\nEjercicio 2.5 Se ha diseñado un ensayo clínico aleatorizado, doble-ciego y controlado con placebo, para estudiar el efecto de dos alternativas terapéuticas en el control de la hipertensión arterial. Se han reclutado 100 pacientes hipertensos y estos han sido distribuidos aleatoriamente en tres grupos de tratamiento. A uno de los grupos (control) se le administró un placebo, a otro grupo se le administró un inhibidor de la enzima conversora de la angiotensina (IECA) y al otro un tratamiento combinado de un diurético y un Antagonista del Calcio. Las variables respuesta final fueron las presiones arteriales sistólica y diastólica.\nLos datos con las claves de aleatorización han sido introducidos en una base de datos que reside en la central de aleatorización, mientras que los datos clínicos han sido archivados en dos archivos distintos, uno para cada uno de los dos centros participantes en el estudio.\nLas variables almacenadas en estos archivos clínicos son las siguientes:\n\nCLAVE: Clave de aleatorización\nNOMBRE: Iniciales del paciente\nF_NACIM: Fecha de Nacimiento\nF_INCLUS: Fecha de inclusión\nSEXO: Sexo (0: Hombre 1: Mujer)\nALTURA: Altura en cm.\nPESO: Peso en Kg.\nPAD_INI: Presión diastólica basal (inicial)\nPAD_FIN: Presión diastólica final\nPAS_INI: Presión sistólica basal (inicial)\nPAS_FIN: Presión sistólica final\n\nEl archivo de claves de aleatorización contiene sólo dos variables.\n\nCLAVE: Clave de aleatorización\nFARMACO: Fármaco administrado (0: Placebo, 1: IECA, 2:Ca Antagonista + diurético)\n\n\nCrear un data frame con los datos de los pacientes del hospital A (fichero de csv datos-hospital-a.csv).\nCrear un data frame con los datos de los pacientes del hospital B (fichero csv datos-hospital-b.csv).\nFusionar los datos de los dos hospitales en un nuevo data frame.\n\n\n\n\n\n\n\nAyuda\n\n\n\n\n\nPara fusionar las filas de dos data frames con las mismas columnas usar la función rbind.\n\n\n\n\nCrear un data frame con los datos de las claves de aleatorización (fichero csv claves-aleatorizacion.csv)\nFusionar el data frame con los datos clínicos y el data frame con claves de aleatorización en un nuevo data frame.\n\n\n\n\n\n\n\nAyuda\n\n\n\n\n\nPara fusionar las columnas de dos data frames usando una misma columna como clave en ambos data frames usar la función left_join del paquete dplyr.\n\n\n\n\nConvertir en un factor el sexo.\nCrear una nueva columna para la evolución de la presión arterial diastólica restando las columnas PAS_FIN y PAS_FIN."
  },
  {
    "objectID": "03-frecuencias-graficos.html#ejercicios-resueltos",
    "href": "03-frecuencias-graficos.html#ejercicios-resueltos",
    "title": "3  Distribuciones de frecuencias y representaciones gráficas",
    "section": "3.1 Ejercicios Resueltos",
    "text": "3.1 Ejercicios Resueltos\nPara la realización de esta práctica se requieren los siguientes paquetes:\n\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\n# - ggplot2: para la representación gráfica.\nlibrary(knitr) # para el formateo de tablas.\nlibrary(kableExtra) # para personalizar el formato de las tablas.\n\n\nEjercicio 3.1 En una encuesta a 25 matrimonios sobre el número de hijos que tenían se obtuvieron los siguientes datos:\n\n\n\n\n\n\n1, 2, 4, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2\n\n\n\n\nCrear un conjunto de datos con la variable hijos.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(hijos = c(1, 2, 4, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2))\n\n\n\n\n\nConstruir la tabla de frecuencias.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara obtener las frecuencias absolutas se puede usar la función table, y para las frecuencias relativas la función prop.table ambas del paquete base de R.\n\n# Frecuencias absolutas.\nni <- table(df$hijos)\n# Frecuencias relativas\nfi <- prop.table(ni)\n# Frecuencias acumuladas.\nNi <- cumsum(ni)\n# Frecuencias relativas acumuladas.\nFi <- cumsum(fi)\n# Creación de un data frame con las frecuencias.\ntabla_frec <- cbind(ni, fi, Ni, Fi)\ntabla_frec\n\n  ni   fi Ni   Fi\n0  2 0.08  2 0.08\n1  6 0.24  8 0.32\n2 14 0.56 22 0.88\n3  2 0.08 24 0.96\n4  1 0.04 25 1.00\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función count del paquete dplyr.\n\n\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\ncount(df, hijos) %>% \n    mutate(fi = n/sum(n), Ni = cumsum(n), Fi = cumsum(n)/sum(n)) %>%\n    kable() %>%\n    kable_styling(bootstrap_options = \"hover\", full_width = F)\n\n\n\n \n  \n    hijos \n    n \n    fi \n    Ni \n    Fi \n  \n \n\n  \n    0 \n    2 \n    0.08 \n    2 \n    0.08 \n  \n  \n    1 \n    6 \n    0.24 \n    8 \n    0.32 \n  \n  \n    2 \n    14 \n    0.56 \n    22 \n    0.88 \n  \n  \n    3 \n    2 \n    0.08 \n    24 \n    0.96 \n  \n  \n    4 \n    1 \n    0.04 \n    25 \n    1.00 \n  \n\n\n\n\n\n\n\n\n\n\nDibujar el diagrama de barras de las frecuencias absolutas, relativas, absolutas acumuladas y relativas acumuladas.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar un diagrama de barras se puede usar la función barplot del paquete graphics.\n\n# Diagrama de barras de frecuencias absolutas.\nbarplot(ni, col = \"steelblue\", main=\"Distribución del número de hijos\", xlab=\"Hijos\", ylab=\"Frecuencia absoluta\")\n\n\n\n# Diagrama de barras de frecuencias relativas.\nbarplot(fi, col = \"steelblue\", main=\"Distribución del número de hijos\", xlab=\"Hijos\", ylab=\"Frecuencia relativa\")\n\n\n\n# Diagrama de barras de frecuencias absolutas acumuladas.\nbarplot(Ni, col = \"steelblue\", main=\"Distribución acumulada del número de hijos\", xlab=\"Hijos\", ylab=\"Frecuencia absoluta acumulada\")\n\n\n\n# Diagrama de barras de frecuencias relativas acumuladas.\nbarplot(Fi, col = \"steelblue\", main=\"Distribución acumulada del número de hijos\", xlab=\"Hijos\", ylab=\"Frecuencia relativa acumulada\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función la función geom_bar del paquete ggplot2.\n\nlibrary(ggplot2)\n# Diagarma de barras de frecuencias absolutas\nggplot(df, aes(x = hijos)) +\n    geom_bar(fill = \"steelblue\") + \n    labs(title = \"Distribución del número de hijos\", y = \"Frecuencia absoluta\")\n\n\n\n# Diagarma de barras de frecuencias relativas\nggplot(df, aes(x = hijos)) +\n    geom_bar(aes(y = (..count..)/sum(..count..)), fill = \"steelblue\") +\n    labs(title = \"Distribución del número de hijos\", y = \"Frecuencia relativa\")\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n# Diagarma de barras de frecuencias acumuladas\nggplot(df, aes(x = hijos)) +\n    geom_bar(aes(y = cumsum(..count..)), fill = \"steelblue\") +\n    labs(title = \"Distribución acumulada del número de hijos\", y = \"Frecuencia absoluta acumulada\")\n\n\n\n# Diagarma de barras de frecuencias acumuladas\nggplot(df, aes(x = hijos)) +\n    geom_bar(aes(y = cumsum(..count..)/sum(..count..)), fill = \"steelblue\") +\n    labs(title = \"Distribución acumulada del número de hijos\", y = \"Frecuencia relativa acumulada\")\n\n\n\n\n\n\n\n\nDibujar el polígono de frecuencias relativas.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar un diagrama de lineas se puede usar la función plot del paquete graphics.\n\n# Frecuencias relativas.\nplot(names(fi), fi, type = \"l\", col = \"steelblue\", main=\"Distribución del número de hijos\", xlab=\"Hijos\", ylab=\"Frecuencia relativa\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función la función geom_line del paquete ggplot2.\n\nlibrary(ggplot2)\ncount(df, hijos) %>% \n    mutate(fi = n/sum(n)) %>%\n    ggplot(aes(x=hijos, y=fi)) +\n    geom_line(col = \"steelblue\") +\n    labs(title = \"Distribución del número de hijos\", y = \"Frecuencia relativa\")\n\n\n\n\n\n\n\n\n\nEjercicio 3.2 En un servicio de atención al cliente se han registrado el número de llamadas de clientes cada día del mes de noviembre, obteniendo los siguientes datos:\n\n\n\n\n\n\n15, 23, 12, 10, 28, 50, 12, 17, 20, 21, 18, 13, 11, 12, 26, 30, 6, 16, 19, 22, 14, 17, 21, 28, 9, 16, 13, 11, 16, 20\n\n\n\n\nCrear un conjunto de datos con la variable llamadas.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(llamadas = c(15, 23, 12, 10, 28, 50, 12, 17, 20, 21, 18, 13, 11, 12, 26, 30, 6, 16, 19, 22, 14, 17, 21, 28, 9, 16, 13, 11, 16, 20))\n\n\n\n\n\nDibujar el diagrama de cajas. ¿Existe algún dato atípico? En el caso de que exista, eliminarlo y proceder con los siguientes apartados.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar un diagrama de cajas se puede usar la función boxplot del paquete graphics.\n\n# Frecuencias relativas.\nboxplot(df$llamadas, col = \"steelblue\", main=\"Distribución del número de llamadas\", horizontal = T, xlab=\"Número de llamadas\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función la función geom_boxplot del paquete ggplot2.\n\nlibrary(ggplot2)\nggplot(df, aes(x = llamadas)) +\n    geom_boxplot(fill = \"steelblue\") +\n    labs(title = \"Distribución del número de llamadas\", x = \"Número de llamadas\")\n\n\n\n\nHay un día con 50 llamadas, que es un valor atípico en comparación con el resto de días.\n\n\n\n\n\n\nSolución\n\n\n\n\n\nLa función cut\n\n# Eliminación del dato atípico.\ndf <- df[df$llamadas != 50, , drop = F]\n\n\n\n\n\n\n\n\nConstruir la tabla de frecuencias agrupando en 5 clases.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara agrupar los datos en intervalos se puede utilizar la función cut del paquete base de R, y para contar las frecuencias absolutas y relativas las funciones table, y prop.table respectivamente.\n\n# Frecuencias absolutas. Creación automática de 5 clases con intervalos cerrados a la izquierda.\n\n\nni <- table(cut(df$llamadas, breaks = 5, right = F))\n# Creación manual de 5 clases.\nni <- table(cut(df$llamadas, breaks = seq(5, 30, 5)))\n# Frecuencias relativas\nfi <- prop.table(ni)\n# Frecuencias acumuladas.\nNi <- cumsum(ni)\n# Frecuencias relativas acumuladas.\nFi <- cumsum(fi)\n# Creación de un data frame con las frecuencias.\ntabla_frec <- cbind(ni, fi, Ni, Fi)\ntabla_frec\n\n        ni        fi Ni        Fi\n(5,10]   3 0.1034483  3 0.1034483\n(10,15]  9 0.3103448 12 0.4137931\n(15,20]  9 0.3103448 21 0.7241379\n(20,25]  4 0.1379310 25 0.8620690\n(25,30]  4 0.1379310 29 1.0000000\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la fución count del paquete dplyr.\n\n\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nmutate(df, llamadas_int = cut(llamadas, breaks = seq(5, 30, 5))) %>% \n    count(llamadas_int) %>%\n    mutate(fi = n/sum(n), Ni = cumsum(n), Fi = cumsum(n)/sum(n)) %>%\n    kable() %>%\n    kable_styling(bootstrap_options = \"hover\", full_width = F)\n\n\n\n \n  \n    llamadas_int \n    n \n    fi \n    Ni \n    Fi \n  \n \n\n  \n    (5,10] \n    3 \n    0.1034483 \n    3 \n    0.1034483 \n  \n  \n    (10,15] \n    9 \n    0.3103448 \n    12 \n    0.4137931 \n  \n  \n    (15,20] \n    9 \n    0.3103448 \n    21 \n    0.7241379 \n  \n  \n    (20,25] \n    4 \n    0.1379310 \n    25 \n    0.8620690 \n  \n  \n    (25,30] \n    4 \n    0.1379310 \n    29 \n    1.0000000 \n  \n\n\n\n\n\n\n\n\n\n\nDibujar el histograma de frecuencias absolutas, relativas, absolutas acumuladas y relativas acumuladas correspondiente a la tabla anterior.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar un histograma se puede usar la función hist del paquete graphics.\n\n# Histograma de frecuencias absolutas.\nhisto <- hist(df$llamadas, breaks = seq(5, 30, 5), col = \"steelblue\", main=\"Distribución del número de llamadas\", xlab=\"Llamadas\", ylab=\"Frecuencia absoluta\")\n\n\n\nni <- histo$counts\n# Histograma de frecuencias relativas.\nhisto$counts <- ni/sum(ni)\nplot(histo, col = \"steelblue\", main=\"Distribución del número de llamadas\", xlab=\"Llamadas\", ylab=\"Frecuencia relativa\")\n\n\n\n# Histograma de frecuencias absolutas acumuladas.\nhisto$counts <- cumsum(ni)\nplot(histo, col = \"steelblue\", main=\"Distribución acumulada del número de llamadas\", xlab=\"Llamadas\", ylab=\"Frecuencia absoluta acumulada\")\n\n\n\n# Histograma de frecuencias relativas acumuladas.\nhisto$counts <- cumsum(ni)/sum(ni)\nplot(histo, col = \"steelblue\", main=\"Distribución acumulada del número de llamadas\", xlab=\"Llamadas\", ylab=\"Frecuencia relativa acumulada\", )\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función la función geom_histogram del paquete ggplot2.\n\nlibrary(ggplot2)\n# Histograma de frecuencias absolutas\nggplot(df, aes(x = llamadas)) +\n    geom_histogram(breaks = seq(5, 30, 5), fill = \"steelblue\", col = \"white\") + \n    labs(title = \"Distribución del número de llamadas\", x = \"Número de llamadas\", y = \"Frecuencia absoluta\")\n\n\n\n# Histograma de frecuencias relativas\nggplot(df, aes(x = llamadas)) +\n    geom_histogram(aes(y = (..count..)/sum(..count..)), breaks = seq(5, 30, 5), fill = \"steelblue\", col = \"white\") +\n    labs(title = \"Distribución del número de llamadas\", x = \"Número de llamadas\", y = \"Frecuencia relativa\")\n\n\n\n# Histograma de frecuencias acumuladas\nggplot(df, aes(x = llamadas)) +\n    geom_histogram(aes(y = cumsum(..count..)), breaks = seq(5, 30, 5), fill = \"steelblue\", col = \"white\") +\n    labs(title = \"Distribución acumulada del número de llamadas\", x = \"Número de llamadas\", y = \"Frecuencia absoluta acumulada\")\n\n\n\n# Histograma de frecuencias relativas acumuladas\nggplot(df, aes(x = llamadas)) +\n    geom_histogram(aes(y = cumsum(..count..)/sum(..count..)),  breaks = seq(5, 30, 5), fill = \"steelblue\", col = \"white\") +\n    labs(title = \"Distribución acumulada del número de llamadas\", x = \"Número de llamadas\", y = \"Frecuencia relativa acumulada\")\n\n\n\n\n\n\n\n\nDibujar el polígono de frecuencias relativas acumuladas (ojiva).\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar la ojiva se puede usar la función plot del paquete graphics.\n\n# Ojiva\ncortes = seq(5, 30, 5)\nni <- table(cut(df$llamadas, breaks = cortes))\nFi <- c(0, cumsum(ni)/sum(ni))\nplot(cortes, Fi, type = \"l\", col = \"steelblue\", main = \"Distribución acumulada del número de llamadas\", xlab = \"Número de llamadas\", ylab = \"Frecuencia relativa acumulada\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la función la función geom_line del paquete ggplot2.\n\nlibrary(ggplot2)\n# Ojiva\ncortes <- seq(5, 30, 5)\ntabla_frec <- mutate(df, llamadas_int = cut(df$llamadas, breaks = cortes)) %>% \n    count(llamadas_int) %>%\n    mutate(cortes = cortes[-1], Fi = cumsum(n)/sum(n)) %>%\n    select(cortes, Fi) \ntabla_frec <- rbind(data.frame(cortes = cortes[1], Fi = 0), tabla_frec)\nggplot(tabla_frec, aes(x = cortes , y = Fi)) +\n    geom_line(col = \"steelblue\") +\n    labs(title = \"Distribución del número de llamadas\", x = \"Número de llamadas\", y = \"Frecuencia relativa acumulada\")\n\n\n\n\n\n\n\n\n\nEjercicio 3.3 Los grupos sanguíneos de una muestra de 30 personas son:\n\n\n\n\n\n\nA, B, B, A, AB, 0, 0, A, B, B, A, A, A, A, AB, A, A, A, B, 0, B, B, B, A, A, A, 0, A, AB, 0\n\n\n\n\nCrear un conjunto de datos con la variable grupo_sanguíneo.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(grupo_sanguineo = c(\"A\", \"B\", \"B\", \"A\", \"AB\", \"0\", \"0\", \"A\", \"B\", \"B\", \"A\", \"A\", \"A\", \"A\", \"AB\", \"A\", \"A\", \"A\", \"B\", \"0\", \"B\", \"B\", \"B\", \"A\", \"A\", \"A\", \"0\", \"A\", \"AB\", \"0\"))\n\n\n\n\n\nConstruir la tabla de frecuencias.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara obtener las frecuencias absolutas se puede usar la función table, y para las frecuencias relativas la función prop.table ambas del paquete base de R.\n\n# Frecuencias absolutas.\nni <- table(df$grupo_sanguineo)\n# Frecuencias relativas\nfi <- prop.table(ni)\ntabla_frec <- cbind(ni, fi)\ntabla_frec\n\n   ni        fi\n0   5 0.1666667\nA  14 0.4666667\nAB  3 0.1000000\nB   8 0.2666667\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar la fución count del paquete dplyr.\n\n\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\ncount(df, grupo_sanguineo) %>% \n    mutate(fi = n/sum(n)) %>%\n    kable() %>%\n    kable_styling(bootstrap_options = \"hover\", full_width = F)\n\n\n\n \n  \n    grupo_sanguineo \n    n \n    fi \n  \n \n\n  \n    0 \n    5 \n    0.1666667 \n  \n  \n    A \n    14 \n    0.4666667 \n  \n  \n    AB \n    3 \n    0.1000000 \n  \n  \n    B \n    8 \n    0.2666667 \n  \n\n\n\n\n\n\n\n\n\n\nDibujar el diagrama de sectores.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nPara dibujar el diagrama de sectores se puede usar la función pie del paquete graphics.\n\n# Diagrama de sectores\npie(ni, col = 1:length(ni), main = \"Distribución de los grupos sanguíneos\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nOtra alternativa es usar las fuciones geom_bar y coor_polar del paquete ggplot2.\n\nggplot(df, aes(x = \"\", fill = grupo_sanguineo)) +\n    # Añadir la capa de las barras.\n    geom_bar() +\n    # Añadir el sistema de coordenadas polares\n    coord_polar(theta = \"y\") +\n    labs(title = \"Distribución de los grupos sanguíneos\")\n\n\n\n\n\n\n\n\n\nEjercicio 3.4 En un estudio de población se tomó una muestra de 27 personas, y se les preguntó por su edad y estado civil, obteniendo los siguientes resultados:\n\n\n\nEstado civil\nEdad\n\n\n\n\nSoltero\n31, 45, 35, 65, 21, 38, 62, 22, 31\n\n\nCasado\n62, 39, 62, 59, 21, 62\n\n\nViudo\n80, 68, 65, 40, 78, 69, 75\n\n\nDivorciado\n31, 65, 59, 49, 65\n\n\n\n\nCrear un conjunto de datos con la variables estado_civil y edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(\n    edad = c(31, 45, 35, 65, 21, 38, 62, 22, 31, 62, 39, 62, 59, 21, 62, 80, 68, 65, 40, 78, 69, 75, 31, 65, 59, 49, 65), \n    estado_civil = rep(c(\"Soltero\", \"Casado\", \"Viudo\", \"Divorciado\"), c(9, 6, 7, 5)))\n\n\n\n\n\nCalcular los tamaños muestrales según estado_civil.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nUsando la función table del paquete base de R podemos obtener las frecuencias absolutas del estado civil que es el tamaño muestral de cada grupo.\n\ntable(df$estado_civil)\n\n\n    Casado Divorciado    Soltero      Viudo \n         6          5          9          7 \n\n\n\n\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nUsando las funciones groub_by, summarise y n del paquete dplyr.\n\nlibrary(dplyr)\ndf %>% group_by(estado_civil) %>%\n    summarise(n = n())\n\n# A tibble: 4 × 2\n  estado_civil     n\n  <chr>        <int>\n1 Casado           6\n2 Divorciado       5\n3 Soltero          9\n4 Viudo            7\n\n\n\n\n\n\nConstruir la tabla de frecuencias de la variable edad para cada categoría de la variable estado_civil.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\nPara dividir la muestra en grupos se puede usar la función group-by del paquete dplyr.\n\n\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nmutate(df, edad_int = cut(edad, breaks = seq(20, 80, 10))) %>%\n    group_by(estado_civil) %>%\n    count(edad_int) %>% \n    mutate(fi = n/sum(n), Ni = cumsum(n), Fi = cumsum(n)/sum(n)) %>%\n    kable() %>%\n    kable_styling(bootstrap_options = \"hover\", full_width = F)\n\n\n\n \n  \n    estado_civil \n    edad_int \n    n \n    fi \n    Ni \n    Fi \n  \n \n\n  \n    Casado \n    (20,30] \n    1 \n    0.1666667 \n    1 \n    0.1666667 \n  \n  \n    Casado \n    (30,40] \n    1 \n    0.1666667 \n    2 \n    0.3333333 \n  \n  \n    Casado \n    (50,60] \n    1 \n    0.1666667 \n    3 \n    0.5000000 \n  \n  \n    Casado \n    (60,70] \n    3 \n    0.5000000 \n    6 \n    1.0000000 \n  \n  \n    Divorciado \n    (30,40] \n    1 \n    0.2000000 \n    1 \n    0.2000000 \n  \n  \n    Divorciado \n    (40,50] \n    1 \n    0.2000000 \n    2 \n    0.4000000 \n  \n  \n    Divorciado \n    (50,60] \n    1 \n    0.2000000 \n    3 \n    0.6000000 \n  \n  \n    Divorciado \n    (60,70] \n    2 \n    0.4000000 \n    5 \n    1.0000000 \n  \n  \n    Soltero \n    (20,30] \n    2 \n    0.2222222 \n    2 \n    0.2222222 \n  \n  \n    Soltero \n    (30,40] \n    4 \n    0.4444444 \n    6 \n    0.6666667 \n  \n  \n    Soltero \n    (40,50] \n    1 \n    0.1111111 \n    7 \n    0.7777778 \n  \n  \n    Soltero \n    (60,70] \n    2 \n    0.2222222 \n    9 \n    1.0000000 \n  \n  \n    Viudo \n    (30,40] \n    1 \n    0.1428571 \n    1 \n    0.1428571 \n  \n  \n    Viudo \n    (60,70] \n    3 \n    0.4285714 \n    4 \n    0.5714286 \n  \n  \n    Viudo \n    (70,80] \n    3 \n    0.4285714 \n    7 \n    1.0000000 \n  \n\n\n\n\n\n\n\n\n\n\nDibujar los diagramas de cajas de la edad según el estado civil. ¿Existen datos atípicos? ¿En qué grupo hay mayor dispersión?\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(df, aes(x = edad, fill = estado_civil)) +\n    geom_boxplot()\n\n\n\n\n\n\n\n\nDibujar los histogramas de la edad según el estado civil.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nggplot(df, aes(x = edad, fill = estado_civil)) +\n    geom_histogram(breaks = seq(20, 80, 10), position = \"identity\", alpha=0.4)\n\n\n\n\nPara dibujar cada histograma por separado se puede usar la función facet_wrap o facet_grid del paquete ggplot2.\n\nggplot(df, aes(x = edad, fill = estado_civil)) +\n    geom_histogram(breaks = seq(20, 80, 10)) +\n    # Añadir la faceta del estado civil\n    facet_grid(rows = vars(estado_civil))"
  },
  {
    "objectID": "03-frecuencias-graficos.html#ejercicios-propuestos",
    "href": "03-frecuencias-graficos.html#ejercicios-propuestos",
    "title": "3  Distribuciones de frecuencias y representaciones gráficas",
    "section": "3.2 Ejercicios propuestos",
    "text": "3.2 Ejercicios propuestos\nEl conjunto de datos neonatos contiene información sobre una muestra de 320 recién nacidos en un hospital durante un año que cumplieron el tiempo normal de gestación.\n\nConstruir la tabla de frecuencias de la puntuación Apgar al minuto de nacer. Si se considera que una puntuación Apgar de 3 o menos indica que el neonato está deprimido, ¿qué porcentaje de niños está deprimido en la muestra?\nComparar las distribuciones de frecuencias de las puntuaciones Apgar al minuto de nacer según si la madre es mayor o menor de 20 años. ¿En qué grupo hay más neonatos deprimidos?\nConstruir la tabla de frecuencias para el peso de los neonatos, agrupando en clases de amplitud \\(0.5\\) desde el \\(2\\) hasta el \\(4.5\\). ¿En qué intervalo de peso hay más neonatos?\nComparar la distribución de frecuencias relativas del peso de los neonatos según si la madre fuma o no. Si se considera como peso bajo un peso menor de \\(2.5\\) kg, ¿En qué grupo hay un mayor porcentaje de niños con peso bajo?\nSi en los recién nacidos se considera como peso bajo un peso menor de \\(2.5\\) kg, calcular la prevalencia del bajo peso de recién nacidos en el grupo de madres fumadoras y en el de no fumadoras.\nConstruir el diagrama de barras de la puntuación Apgar al minuto. ¿Qué puntuación Apgar es la más frecuente?\nConstruir el diagrama de frecuencias relativas acumuladas de la puntuación Apgar al minuto. ¿Por debajo de que puntuación estarán la mitad de los niños?\nComparar mediante diagramas de barras de frecuencias relativas las distribuciones de las puntuaciones Apgar al minuto según si la madre ha fumado o no durante el embarazo. ¿Qué se puede concluir?\nConstruir el histograma de pesos, agrupando en clases de amplitud \\(0.5\\) desde el \\(2\\) hasta el \\(4.5\\). ¿En qué intervalo de peso hay más niños?\nComparar la distribución de frecuencias relativas del peso de los neonatos según si la madre fuma o no. ¿En qué grupo se aprecia menor peso de los niños de la muestra?\nComparar la distribución de frecuencias relativas del peso de los neonatos según si la madre fumaba o no antes del embarazo. ¿Qué se puede concluir?\nConstruir el diagrama de caja y bigotes del peso. ¿Entre qué valores se considera que el peso de un neonato es normal? ¿Existen datos atípicos?\nComparar el diagrama de cajas y bigotes del peso, según si la madre fumó o no durante el embarazo y si era mayor o no de 20 años. ¿En qué grupo el peso tiene más dispersión central? ¿En qué grupo pesan menos los niños de la muestra?\nComparar el diagrama de cajas de la puntuación Apgar al minuto y a los cinco minutos. ¿En qué variable hay más dispersión central?"
  },
  {
    "objectID": "04-descriptiva.html#ejercicios-resueltos",
    "href": "04-descriptiva.html#ejercicios-resueltos",
    "title": "4  Estadística Descriptiva",
    "section": "4.1 Ejercicios Resueltos",
    "text": "4.1 Ejercicios Resueltos\nPara la realización de esta práctica se requieren los siguientes paquetes:\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\nlibrary(vtable) # para resúmenes estadísticos.\nlibrary(skimr) # para resúmenes estadísticos.\nlibrary(summarytools) # para resúmenes estadísticos.\nlibrary(knitr) # para el formateo de tablas.\nlibrary(kableExtra) # para personalizar el formato de las tablas.\n\nEjercicio 4.1 En una encuesta a 25 matrimonios sobre el número de hijos que tenían se obtuvieron los siguientes datos:\n\n\n\n\n\n\n1, 2, 4, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2\n\n\n\n\nCrear un conjunto de datos con la variable hijos.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(hijos = c(1, 2, 4, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2))\n\n\n\n\nCalcular el tamaño muestral.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nnrow(df)\n\n[1] 25\n\n\n\n\n\nCalcular la media.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nmean(df$hijos)\n\n[1] 1.76\n\n\n\n\n\nCalcular la mediana.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nmedian(df$hijos)\n\n[1] 2\n\n\n\n\n\nCalcular la moda.\n\n\n\n\n\n\nSolución\n\n\n\n\n\nEl paquete base de R no tiene implementada ninguna función para calcular la moda, así que definiremos nuestra propia función.\n\nmoda <- function(x) {\nu <- unique(x) # Vector con los valores de la muestra sin repetir (sin ordenar).\ntab <- tabulate(match(x, u)) # Frecuencias absolutas de los valores en u.\nu[tab == max(tab)] # Valor con la mayor frecuencia.\n}\n\nmoda(df$hijos)\n\n[1] 2\n\n\n\n\n\nCalcular el mínimo.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nmin(df$hijos)\n\n[1] 0\n\n\n\n\n\nCalcular el máximo.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nmax(df$hijos)\n\n[1] 4\n\n\n\n\n\nCalcular los cuartiles.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nquantile(df$hijos, prob=c(0.25, 0.5, 0.75))\n\n25% 50% 75% \n  1   2   2 \n\n\n\n\n\nCalcular los percentiles 5 y 95.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nquantile(df$hijos, prob=c(0.05, 0.95))\n\n 5% 95% \n0.2 3.0 \n\n\n\n\n\nCalcular el rango.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nmax(df$hijos) - min(df$hijos)\n\n[1] 4\n\n\n\n\n\nCalcular el rango intecuartílico.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nIQR(df$hijos)\n\n[1] 1\n\n\n\n\n\nCalcular la varianza\n\n\n\n\n\n\nSolución\n\n\n\n\n\nR dispone de la función var para calcular la cuasivarianza o varianza corregida \\(\\sum \\frac{(x_i-\\bar x)^2}{n-1}\\), pero no dispone de una función para calcular la varianza, de manera que para calcularla hay que corregir la cuasivarianza.\n\nn <- nrow(df)\n# Cuasivarianza\nprint(paste(\"Cuasivarianza:\", var(df$hijos)))\n\n[1] \"Cuasivarianza: 0.773333333333333\"\n\n# Varianza\nprint(paste(\"Varianza: \", var(df$hijos)*(n-1)/n))\n\n[1] \"Varianza:  0.7424\"\n\n\n\n\n\nCalcular la desviación típica.\n\n\n\n\n\n\nSolución\n\n\n\n\n\nR dispone de la función sd para calcular la cuasidesviación típica o desviación típica corregida \\(\\sqrt{\\sum \\frac{(x_i-\\bar x)^2}{n-1}}\\), pero no dispone de una función para calcular la desviación típica, de manera que para calcularla hay que corregir la cuasidesviación típica.\n\nn <- nrow(df)\n# Cuasidesviación típica\nprint(paste(\"Cuasidesviación típica:\", sd(df$hijos)))\n\n[1] \"Cuasidesviación típica: 0.879393730551528\"\n\n# Desviación típica\nprint(paste(\"Desviación típica: \", sd(df$hijos)*sqrt((n-1)/n)))\n\n[1] \"Desviación típica:  0.861626369141521\"\n\n\n\n\n\nCalcular el coeficiente de variación.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nsd(df$hijos) / abs(mean(df$hijos))\n\n[1] 0.4996555\n\n\n\n\n\nCalcular el coeficiente de asimetría.\n\n\n\n\n\n\nSolución\n\n\n\n\n\nPara calcular el coeficiente de asimetría se utiliza el paquete moments.\n\nlibrary(moments)\nskewness(df$hijos)\n\n[1] 0.1068549\n\n\nComo \\(g_1\\) está próxima a \\(0\\), la distribución es casi simétrica.\n\n\n\nCalcular el coeficiente de apuntamiento.\n\n\n\n\n\n\nSolución\n\n\n\n\n\nPara calcular el coeficiente de apuntamiento se utiliza el paquete moments.\n\nlibrary(moments)\nkurtosis(df$hijos)\n\n[1] 3.71169\n\n\nComo \\(g_2>0\\), la distribución es más apuntada de lo normal (leptocúrtica). Como además \\(g_2\\not\\in(-2,2)\\) se puede concluir que la muestra es demasiado apuntada para provenir de una población normal.\n\n\n\n\n\n\nEjercicio 4.2 El fichero colesterol.csv contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\nCrear un data frame con los datos de todos los pacientes del estudio a partir del fichero colesterol.csv.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- read.csv(\"https://raw.githubusercontent.com/asalber/estadistica-practicas-r/main/datos/colesterol.csv\")\ndf\n\n                            nombre edad sexo peso altura colesterol\n1     José Luis Martínez Izquierdo   18    H   85   1.79        182\n2                   Rosa Díaz Díaz   32    M   65   1.73        232\n3            Javier García Sánchez   24    H   NA   1.81        191\n4              Carmen López Pinzón   35    M   65   1.70        200\n5             Marisa López Collado   46    M   51   1.58        148\n6                Antonio Ruiz Cruz   68    H   66   1.74        249\n7          Antonio Fernández Ocaña   51    H   62   1.72        276\n8            Pilar Martín González   22    M   60   1.66         NA\n9             Pedro Gálvez Tenorio   35    H   90   1.94        241\n10         Santiago Reillo Manzano   46    H   75   1.85        280\n11           Macarena Álvarez Luna   53    M   55   1.62        262\n12      José María de la Guía Sanz   58    H   78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez   27    H  109   1.98        210\n14           Carolina Rubio Moreno   20    M   61   1.77        194\n\n\n\n\n\nCalcular el tamaño muestral según el sexo.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\n\n\n\n\n\nCalcular la media y la desviación típica del nivel de colesterol sin tener en cuenta los datos perdidos.\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nprint(paste(\"Media:\", mean(df$colesterol, na.rm = TRUE)))\n\n[1] \"Media: 220.230769230769\"\n\nprint(paste(\"Desviación típica:\", sd(df$colesterol, na.rm = TRUE)))\n\n[1] \"Desviación típica: 39.8479481825473\"\n\n\n\n\n\nRealizar un resumen estadístico con la media, el mínimo, los cuartiles y el máximo.\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nUsando el paquete base de R.\n\nsummary(df)\n\n    nombre               edad           sexo                peso       \n Length:14          Min.   :18.00   Length:14          Min.   : 51.00  \n Class :character   1st Qu.:24.75   Class :character   1st Qu.: 61.00  \n Mode  :character   Median :35.00   Mode  :character   Median : 65.00  \n                    Mean   :38.21                      Mean   : 70.92  \n                    3rd Qu.:49.75                      3rd Qu.: 78.00  \n                    Max.   :68.00                      Max.   :109.00  \n                                                       NA's   :1       \n     altura        colesterol   \n Min.   :1.580   Min.   :148.0  \n 1st Qu.:1.705   1st Qu.:194.0  \n Median :1.755   Median :210.0  \n Mean   :1.769   Mean   :220.2  \n 3rd Qu.:1.840   3rd Qu.:249.0  \n Max.   :1.980   Max.   :280.0  \n                 NA's   :1      \n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nUsando la función st del paquete vtable.\n\nlibrary(vtable)\nst(df)\n\n\n\nSummary Statistics\n \n  \n    Variable \n    N \n    Mean \n    Std. Dev. \n    Min \n    Pctl. 25 \n    Pctl. 75 \n    Max \n  \n \n\n  \n    edad \n    14 \n    38 \n    16 \n    18 \n    25 \n    50 \n    68 \n  \n  \n    sexo \n    14 \n     \n     \n     \n     \n     \n     \n  \n  \n    ... H \n    8 \n    57% \n     \n     \n     \n     \n     \n  \n  \n    ... M \n    6 \n    43% \n     \n     \n     \n     \n     \n  \n  \n    peso \n    13 \n    71 \n    16 \n    51 \n    61 \n    78 \n    109 \n  \n  \n    altura \n    14 \n    1.8 \n    0.12 \n    1.6 \n    1.7 \n    1.8 \n    2 \n  \n  \n    colesterol \n    13 \n    220 \n    40 \n    148 \n    194 \n    249 \n    280 \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 3\n\n\n\n\n\nUsando la función skim del paquete skimr.\n\nlibrary(skimr)\nskim(df)\n\n\n\n\nData summary\n\n\n\n\nName\n\n\ndf\n\n\n\n\nNumber of rows\n\n\n14\n\n\n\n\nNumber of columns\n\n\n6\n\n\n\n\n_______________________\n\n\n\n\n\n\nColumn type frequency:\n\n\n\n\n\n\ncharacter\n\n\n2\n\n\n\n\nnumeric\n\n\n4\n\n\n\n\n________________________\n\n\n\n\n\n\nGroup variables\n\n\nNone\n\n\n\n\n\nVariable type: character\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmin\n\n\nmax\n\n\nempty\n\n\nn_unique\n\n\nwhitespace\n\n\n\n\n\n\nnombre\n\n\n0\n\n\n1\n\n\n14\n\n\n31\n\n\n0\n\n\n14\n\n\n0\n\n\n\n\nsexo\n\n\n0\n\n\n1\n\n\n1\n\n\n1\n\n\n0\n\n\n2\n\n\n0\n\n\n\n\n\nVariable type: numeric\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmean\n\n\nsd\n\n\np0\n\n\np25\n\n\np50\n\n\np75\n\n\np100\n\n\nhist\n\n\n\n\n\n\nedad\n\n\n0\n\n\n1.00\n\n\n38.21\n\n\n15.62\n\n\n18.00\n\n\n24.75\n\n\n35.00\n\n\n49.75\n\n\n68.00\n\n\n▇▅▃▅▂\n\n\n\n\npeso\n\n\n1\n\n\n0.93\n\n\n70.92\n\n\n16.13\n\n\n51.00\n\n\n61.00\n\n\n65.00\n\n\n78.00\n\n\n109.00\n\n\n▇▅▅▂▂\n\n\n\n\naltura\n\n\n0\n\n\n1.00\n\n\n1.77\n\n\n0.12\n\n\n1.58\n\n\n1.70\n\n\n1.75\n\n\n1.84\n\n\n1.98\n\n\n▆▇▆▃▃\n\n\n\n\ncolesterol\n\n\n1\n\n\n0.93\n\n\n220.23\n\n\n39.85\n\n\n148.00\n\n\n194.00\n\n\n210.00\n\n\n249.00\n\n\n280.00\n\n\n▂▇▂▅▅\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 4\n\n\n\n\n\nUsando las funciones descr y dfSummary del paquete summarytools.\n\nlibrary(summarytools)\ndescr(df) %>%\nkable() %>%\nkable_styling()\n\n\n\n \n  \n      \n    altura \n    colesterol \n    edad \n    peso \n  \n \n\n  \n    Mean \n    1.7685714 \n    220.2307692 \n    38.2142857 \n    70.9230769 \n  \n  \n    Std.Dev \n    0.1150155 \n    39.8479482 \n    15.6213787 \n    16.1269006 \n  \n  \n    Min \n    1.5800000 \n    148.0000000 \n    18.0000000 \n    51.0000000 \n  \n  \n    Q1 \n    1.7000000 \n    194.0000000 \n    24.0000000 \n    61.0000000 \n  \n  \n    Median \n    1.7550000 \n    210.0000000 \n    35.0000000 \n    65.0000000 \n  \n  \n    Q3 \n    1.8500000 \n    249.0000000 \n    51.0000000 \n    78.0000000 \n  \n  \n    Max \n    1.9800000 \n    280.0000000 \n    68.0000000 \n    109.0000000 \n  \n  \n    MAD \n    0.1111950 \n    41.5128000 \n    17.7912000 \n    14.8260000 \n  \n  \n    IQR \n    0.1350000 \n    55.0000000 \n    25.0000000 \n    17.0000000 \n  \n  \n    CV \n    0.0650330 \n    0.1809372 \n    0.4087837 \n    0.2273858 \n  \n  \n    Skewness \n    0.2052057 \n    -0.0022401 \n    0.3238511 \n    0.9149779 \n  \n  \n    SE.Skewness \n    0.5973799 \n    0.6163361 \n    0.5973799 \n    0.6163361 \n  \n  \n    Kurtosis \n    -0.9852205 \n    -1.2502343 \n    -1.2886761 \n    -0.1208155 \n  \n  \n    N.Valid \n    14.0000000 \n    13.0000000 \n    14.0000000 \n    13.0000000 \n  \n  \n    Pct.Valid \n    100.0000000 \n    92.8571429 \n    100.0000000 \n    92.8571429 \n  \n\n\n\n\nprint(dfSummary(df, plain.ascii = FALSE, style = \"grid\"), method = \"render\")\n\n\n\nData Frame Summary\ndf\nDimensions: 14 x 6\n  Duplicates: 0\n\n\n  \n    \n      No\n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Valid\n      Missing\n    \n  \n  \n    \n      1\n      nombre\n[character]\n      1. Antonio Fernández Ocaña2. Antonio Ruiz Cruz3. Carmen López Pinzón4. Carolina Rubio Moreno5. Javier García Sánchez6. José Luis Martínez Izquie7. José María de la Guía San8. Macarena Álvarez Luna9. Marisa López Collado10. Miguel Angel Cuadrado Gut[ 4 others ]\n      1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)1(7.1%)4(28.6%)\n      \n      14\n(100.0%)\n      0\n(0.0%)\n    \n    \n      2\n      edad\n[integer]\n      Mean (sd) : 38.2 (15.6)min ≤ med ≤ max:18 ≤ 35 ≤ 68IQR (CV) : 25 (0.4)\n      12 distinct values\n      \n      14\n(100.0%)\n      0\n(0.0%)\n    \n    \n      3\n      sexo\n[character]\n      1. H2. M\n      8(57.1%)6(42.9%)\n      \n      14\n(100.0%)\n      0\n(0.0%)\n    \n    \n      4\n      peso\n[numeric]\n      Mean (sd) : 70.9 (16.1)min ≤ med ≤ max:51 ≤ 65 ≤ 109IQR (CV) : 17 (0.2)\n      12 distinct values\n      \n      13\n(92.9%)\n      1\n(7.1%)\n    \n    \n      5\n      altura\n[numeric]\n      Mean (sd) : 1.8 (0.1)min ≤ med ≤ max:1.6 ≤ 1.8 ≤ 2IQR (CV) : 0.1 (0.1)\n      14 distinct values\n      \n      14\n(100.0%)\n      0\n(0.0%)\n    \n    \n      6\n      colesterol\n[numeric]\n      Mean (sd) : 220.2 (39.8)min ≤ med ≤ max:148 ≤ 210 ≤ 280IQR (CV) : 55 (0.2)\n      13 distinct values\n      \n      13\n(92.9%)\n      1\n(7.1%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.3)2023-03-31\n\n\n\n\n\n\n¿En qué variable es más representativa la media?\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nUsando la función sumtable del paquete vtable.\n\nlibrary(vtable)\nsumtable(df, summ = c('mean(x)', 'sd(x)', 'sd(x)/mean(x)'),\nsumm.names = c(\"Media\", \"Desviación Típica\", \"Coef. Variación\"))\n\nWarning in sumtable(df, summ = c(\"mean(x)\", \"sd(x)\", \"sd(x)/mean(x)\"), summ.names = c(\"Media\", : Factor variables ignore custom summ options. Cols 1 and 2 are count and percentage.\nBeware combining factors with a custom summ unless factor.numeric = TRUE.\n\n\n\n\nSummary Statistics\n \n  \n    Variable \n    Media \n    Desviación Típica \n    Coef. Variación \n  \n \n\n  \n    edad \n    38 \n    16 \n    0.41 \n  \n  \n    sexo \n    14 \n     \n     \n  \n  \n    ... H \n    8 \n    57% \n     \n  \n  \n    ... M \n    6 \n    43% \n     \n  \n  \n    peso \n    71 \n    16 \n    0.23 \n  \n  \n    altura \n    1.8 \n    0.12 \n    0.065 \n  \n  \n    colesterol \n    220 \n    40 \n    0.18 \n  \n\n\n\n\n\nLa variable con el coeficiente de variación más pequeño es la altura, por lo que es la que tiene la media más representativa.\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nUsando las funciones summarise y across del paquete dplyr.\n\nlibrary(dplyr)\nsummarise(df, across(.cols = where(is.numeric), .fns = list(Media = ~ mean(.x, na.rm = T), `Desviación Típica` = ~ sd(.x, na.rm = T), `Coef. Variación` = ~ sd(.x, na.rm=T) / mean(.x, na.rm=T)))) %>%\nkable() %>%\nkable_styling()\n\n\n\n \n  \n    edad_Media \n    edad_Desviación Típica \n    edad_Coef. Variación \n    peso_Media \n    peso_Desviación Típica \n    peso_Coef. Variación \n    altura_Media \n    altura_Desviación Típica \n    altura_Coef. Variación \n    colesterol_Media \n    colesterol_Desviación Típica \n    colesterol_Coef. Variación \n  \n \n\n  \n    38.21429 \n    15.62138 \n    0.4087837 \n    70.92308 \n    16.1269 \n    0.2273858 \n    1.768571 \n    0.1150155 \n    0.065033 \n    220.2308 \n    39.84795 \n    0.1809372 \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 3\n\n\n\n\n\nUsando las funciones group_by y summarise del paquete dplyr y pivotando el data frame a formato largo.\n\nlibrary(tidyverse)\ndf %>% select(where(is.numeric)) %>% \n    pivot_longer(everything(), names_to = \"Variable\", values_to = \"Valor\") %>%\n    group_by(Variable) %>%\n    summarise(\"Media\" = mean(Valor, na.rm = T), \n    \"Desviación Típica\" = sd(Valor, na.rm = T),\n    \"Coef. Variación\" = sd(Valor, na.rm = T) / mean(Valor, na.rm = T)) %>%\n    kable() %>%\n    kable_styling()\n\n\n\n \n  \n    Variable \n    Media \n    Desviación Típica \n    Coef. Variación \n  \n \n\n  \n    altura \n    1.768571 \n    0.1150155 \n    0.0650330 \n  \n  \n    colesterol \n    220.230769 \n    39.8479482 \n    0.1809372 \n  \n  \n    edad \n    38.214286 \n    15.6213787 \n    0.4087837 \n  \n  \n    peso \n    70.923077 \n    16.1269006 \n    0.2273858 \n  \n\n\n\n\n\nLa variable con el coeficiente de variación más pequeño es la altura, por lo que es la que tiene la media más representativa.\n\n\n\nRealizar un resumen estadístico con el coeficiente de asimetría y el coeficiente de apuntamiento del peso y la estatura según el sexo. ¿Qué grupo tiene peso más normal, los hombres o las mujeres? ¿Y una estatura más normal?\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nUsando la función sumtable del paquete vtable.\n\nlibrary(vtable)\nsumtable(df, vars = c(\"peso\", \"altura\"), group = \"sexo\", summ = c('skewness(x)', 'kurtosis(x)'),\nsumm.names = c(\"Coef. Asimetría\", \"Coef. Apuntamiento\"))\n\nWarning in sumtable(df, vars = c(\"peso\", \"altura\"), group = \"sexo\", summ = c(\"skewness(x)\", : Factor variables ignore custom summ options. Cols 1 and 2 are count and percentage.\nBeware combining factors with a custom summ unless factor.numeric = TRUE.\n\n\n\n\nSummary Statistics\n \n\nsexo\nH\nM\n\n  \n    Variable \n    Coef. Asimetría \n    Coef. Apuntamiento \n    Coef. Asimetría \n    Coef. Apuntamiento \n  \n \n\n  \n    peso \n    0.61 \n    2.5 \n    -0.47 \n    1.9 \n  \n  \n    altura \n    0.27 \n    1.9 \n    -0.07 \n    1.8 \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nUsando las funciones group_by y summarise del paquete dplyr.\n\nlibrary(dplyr)\ndf %>% select(sexo, peso, altura) %>%\ngroup_by(sexo) %>%\nsummarise(across(.cols = everything(), .fns = list(\"Coef. Asimetría\" = ~ skewness(.x, na.rm = T), \"Coef. Apuntamiento\" = ~ kurtosis(.x, na.rm = T)))) %>%\nkable() %>%\nkable_styling()\n\n\n\n \n  \n    sexo \n    peso_Coef. Asimetría \n    peso_Coef. Apuntamiento \n    altura_Coef. Asimetría \n    altura_Coef. Apuntamiento \n  \n \n\n  \n    H \n    0.6107239 \n    2.508255 \n    0.2668417 \n    1.904435 \n  \n  \n    M \n    -0.4661293 \n    1.852431 \n    -0.0699589 \n    1.756341 \n  \n\n\n\n\n\nLas mujeres tienen un peso más normal ya que tanto el coeficiente de asimetría como el de apuntamiento están más próximos a 0. Lo mismo ocurre con la altura."
  },
  {
    "objectID": "04-descriptiva.html#ejercicios-propuestos",
    "href": "04-descriptiva.html#ejercicios-propuestos",
    "title": "4  Estadística Descriptiva",
    "section": "4.2 Ejercicios propuestos",
    "text": "4.2 Ejercicios propuestos"
  }
]