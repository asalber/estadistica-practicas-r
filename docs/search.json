[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prácticas de Estadística con R",
    "section": "",
    "text": "¡Bienvenido a Prácticas de Estadística con R!\nEste libro presenta una recopilación de prácticas de Estadística Descriptiva e Inferencial con el lenguaje de programación R, con problemas aplicados a las Ciencias y las Ingenierías.\nNo es un libro para aprender a programar con R, ya que solo enseña el uso del lenguaje y de algunos de sus paquetes para resolver problemas de Estadística. Para quienes estén interesados en aprender a programar en este lenguaje, os recomiendo leer este manual de R."
  },
  {
    "objectID": "index.html#capítulos",
    "href": "index.html#capítulos",
    "title": "Prácticas de Estadística con R",
    "section": "Capítulos",
    "text": "Capítulos\n\n\n\n\n\n\n\nIntroducción a R\n\n\n\n\n\n\n\n\n\n\nPreprocesamiento de datos\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#licencia",
    "href": "index.html#licencia",
    "title": "Prácticas de Estadística con R",
    "section": "Licencia",
    "text": "Licencia\nEsta obra está bajo una licencia Reconocimiento – No comercial – Compartir bajo la misma licencia 3.0 España de Creative Commons. Para ver una copia de esta licencia, visite https://creativecommons.org/licenses/by-nc-sa/3.0/es/.\nCon esta licencia eres libre de:\n\nCopiar, distribuir y mostrar este trabajo.\nRealizar modificaciones de este trabajo.\n\nBajo las siguientes condiciones:\n\nReconocimiento. Debe reconocer los créditos de la obra de la manera especificada por el autor o el licenciador (pero no de una manera que sugiera que tiene su apoyo o apoyan el uso que hace de su obra).\nNo comercial. No puede utilizar esta obra para fines comerciales.\nCompartir bajo la misma licencia. Si altera o transforma esta obra, o genera una obra derivada, sólo puede distribuir la obra generada bajo una licencia idéntica a ésta.\n\nAl reutilizar o distribuir la obra, tiene que dejar bien claro los términos de la licencia de esta obra.\nEstas condiciones pueden no aplicarse si se obtiene el permiso del titular de los derechos de autor.\nNada en esta licencia menoscaba o restringe los derechos morales del autor."
  },
  {
    "objectID": "01-intro.html#instalación-de-r",
    "href": "01-intro.html#instalación-de-r",
    "title": "1  Introducción a R",
    "section": "1.1 Instalación de R",
    "text": "1.1 Instalación de R\nR puede descargarse desde el sitio web oficial de R o desde el repositorio principal de paquetes de R CRAN. Basta con descargar el archivo de instalación correspondiente al sistema operativo de nuestro ordenador y realizar la instalación como cualquier otro programa.\nEl intérprete de R se arranca desde la terminal, aunque en Windows incorpora su propia aplicación, pero es muy básica. En general, para trabajos serios, conviene utilizar un entorno de desarrollo para R."
  },
  {
    "objectID": "01-intro.html#entornos-de-desarrollo",
    "href": "01-intro.html#entornos-de-desarrollo",
    "title": "1  Introducción a R",
    "section": "1.2 Entornos de desarrollo",
    "text": "1.2 Entornos de desarrollo\nPor defecto el entorno de trabajo de R es en línea de comandos, lo que significa que los cálculos y los análisis se realizan mediante comandos o instrucciones que el usuario teclea en una ventana de texto. No obstante, existen distintas interfaces gráficas de usuario que facilitan su uso, sobre todo para usuarios noveles. Algunas de ellas, como las que se enumeran a continuación, son completos entornos de desarrollo que facilitan la gestión de cualquier proyecto:\n\nRStudio. Probablemente el entorno de desarrollo más extendido para programar con R ya que incorpora multitud de utilidades para facilitar la programación con R.\nRKWard. Es otra otro de los entornos de desarrollo más completos que además incluye a posibilidad de añadir nuevos menús y cuadros de diálogo personalizados.\nVisual Studio Code. Es un entorno de desarrollo de propósito general ampliamente extendido. Aunque no es un entorno de desarrollo específico para R, incluye una extensión con utilidades que facilitan mucho el desarrollo con R."
  },
  {
    "objectID": "02-preprocesamiento-datos.html#ejercicios-resueltos",
    "href": "02-preprocesamiento-datos.html#ejercicios-resueltos",
    "title": "2  Preprocesamiento de datos",
    "section": "2.1 Ejercicios Resueltos",
    "text": "2.1 Ejercicios Resueltos\nPara la realización de esta práctica se requieren los paquetes readr y dplyr de la colección de paquetes tidyverse.\n\nlibrary(tidyverse) \n# Incluye los siguientes paquetes:\n# - readr: para la lectura de ficheros csv. \n# - dplyr: para el preprocesamiento y manipulación de datos.\n\n\nEjercicio 2.1 La siguiente tabla contiene los ingresos y gastos de una empresa durante el primer trimestre del año.\n\n\n\n\n \n  \n    Mes \n    Ingresos \n    Gastos \n    Impuestos \n  \n \n\n  \n    Enero \n    45000 \n    33400 \n    6450 \n  \n  \n    Febrero \n    41500 \n    35400 \n    6300 \n  \n  \n    Marzo \n    51200 \n    35600 \n    7100 \n  \n\n\n\n\n\n\nCrear un data frame con los datos de la tabla.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(\n    Mes = c(\"Enero\", \"Febrero\", \"Marzo\"),\n    Ingresos = c(45000, 41500, 51200),\n    Gastos = c(33400, 35400, 35600)\n    )\ndf \n\n      Mes Ingresos Gastos\n1   Enero    45000  33400\n2 Febrero    41500  35400\n3   Marzo    51200  35600\n\n\n\n\n\n\nAñadir una nueva columna con los siguientes impuestos pagados.\n\n\n\n\n\n \n  \n    Mes \n    Impuestos \n  \n \n\n  \n    Enero \n    6450 \n  \n  \n    Febrero \n    6300 \n  \n  \n    Marzo \n    7100 \n  \n\n\n\n\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Impuestos <- c(6450, 6300, 7100)\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Impuestos = c(6450, 6300, 7100))\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n\n\n\n\n\n\nAñadir una nueva fila con los siguientes datos de Abril.\n\n\n\n\n\n \n  \n    Mes \n    Ingresos \n    Gastos \n    Impuestos \n  \n \n\n  \n    Abril \n    49700 \n    36300 \n    6850 \n  \n\n\n\n\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf <- rbind(df, list(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850))\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\n\n\n\ndf <- df %>%\n    add_row(Mes = \"Abril\", Ingresos = 49700, Gastos = 36300, Impuestos = 6850)\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    51200  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\nCambiar los ingresos de Marzo por 50400.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf[3, \"Ingresos\"] <- 50400\ndf\n\n      Mes Ingresos Gastos Impuestos\n1   Enero    45000  33400      6450\n2 Febrero    41500  35400      6300\n3   Marzo    50400  35600      7100\n4   Abril    49700  36300      6850\n\n\n\n\n\n\nCrear una nueva columna con los beneficios de cada mes (ingresos - gastos - impuestos).\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Beneficios <- df$Ingresos - df$Gastos - df$Impuestos\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Beneficios = Ingresos - Gastos - Impuestos)\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios\n1   Enero    45000  33400      6450       5150\n2 Febrero    41500  35400      6300       -200\n3   Marzo    50400  35600      7100       7700\n4   Abril    49700  36300      6850       6550\n\n\n\n\n\n\nCrear una nueva columna con el factor Balance con dos posibles categorías: positivo si ha habido beneficios y negativo si ha habido pérdidas.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf$Balance <- cut(df$Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\"))\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf <- df %>%\n    mutate(Balance = cut(Beneficios, breaks = c(-Inf, 0, Inf), labels = c(\"negativo\", \"positivo\")))\ndf\n\n      Mes Ingresos Gastos Impuestos Beneficios  Balance\n1   Enero    45000  33400      6450       5150 positivo\n2 Febrero    41500  35400      6300       -200 negativo\n3   Marzo    50400  35600      7100       7700 positivo\n4   Abril    49700  36300      6850       6550 positivo\n\n\n\n\n\n\nFiltrar el conjunto de datos para quedarse con los nombres de los meses y los beneficios de los meses con balance positivo.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf[df$Balance == \"positivo\", c(\"Mes\", \"Beneficios\")]\n\n    Mes Beneficios\n1 Enero       5150\n3 Marzo       7700\n4 Abril       6550\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete dplyr.\n\ndf %>%\n    filter(Balance == \"positivo\") %>% \n    select(Mes, Beneficios)\n\n    Mes Beneficios\n1 Enero       5150\n2 Marzo       7700\n3 Abril       6550\n\n\n\n\n\n\n\nEjercicio 2.2 El fichero colesterol.csv contiene información de una muestra de pacientes donde se han medido la edad, el sexo, el peso, la altura y el nivel de colesterol, además de su nombre.\n\nCrear un data frame con los datos de todos los pacientes del estudio a partir del fichero colesterol.csv.\n\n\n\n\n\n\n\nSolución 1\n\n\n\n\n\nCon las funciones básicas de R.\n\ndf <- read.csv('https://raw.githubusercontent.com/asalber/manual-r/master/datos/colesterol.csv')\ndf\n\n                            nombre edad sexo peso altura colesterol\n1     José Luis Martínez Izquierdo   18    H   85   1.79        182\n2                   Rosa Díaz Díaz   32    M   65   1.73        232\n3            Javier García Sánchez   24    H   NA   1.81        191\n4              Carmen López Pinzón   35    M   65   1.70        200\n5             Marisa López Collado   46    M   51   1.58        148\n6                Antonio Ruiz Cruz   68    H   66   1.74        249\n7          Antonio Fernández Ocaña   51    H   62   1.72        276\n8            Pilar Martín González   22    M   60   1.66         NA\n9             Pedro Gálvez Tenorio   35    H   90   1.94        241\n10         Santiago Reillo Manzano   46    H   75   1.85        280\n11           Macarena Álvarez Luna   53    M   55   1.62        262\n12      José María de la Guía Sanz   58    H   78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez   27    H  109   1.98        210\n14           Carolina Rubio Moreno   20    M   61   1.77        194\n\n\n\n\n\n\n\n\n\n\n\nSolución 2\n\n\n\n\n\nCon las funciones del paquete readr.\n\ndf <- read_csv('https://raw.githubusercontent.com/asalber/manual-r/master/datos/colesterol.csv')\ndf\n\n# A tibble: 14 × 6\n   nombre                           edad sexo   peso altura colesterol\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232\n 3 Javier García Sánchez              24 H        NA   1.81        191\n 4 Carmen López Pinzón                35 M        65   1.7         200\n 5 Marisa López Collado               46 M        51   1.58        148\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276\n 8 Pilar Martín González              22 M        60   1.66         NA\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241\n10 Santiago Reillo Manzano            46 H        75   1.85        280\n11 Macarena Álvarez Luna              53 M        55   1.62        262\n12 José María de la Guía Sanz         58 H        78   1.87        198\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210\n14 Carolina Rubio Moreno              20 M        61   1.77        194\n\n\n\n\n\n\nCrear una nueva columna con el índice de masa corporal, usando la siguiente fórmula\n\n\\[\n\\mbox{IMC} = \\frac{\\mbox{Peso (kg)}}{\\mbox{Altura (cm)}^2}\n\\]\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- df %>%\n    mutate(imc = round(peso/altura^2))\ndf\n\n# A tibble: 14 × 7\n   nombre                           edad sexo   peso altura colesterol   imc\n   <chr>                           <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl>\n 1 José Luis Martínez Izquierdo       18 H        85   1.79        182    27\n 2 Rosa Díaz Díaz                     32 M        65   1.73        232    22\n 3 Javier García Sánchez              24 H        NA   1.81        191    NA\n 4 Carmen López Pinzón                35 M        65   1.7         200    22\n 5 Marisa López Collado               46 M        51   1.58        148    20\n 6 Antonio Ruiz Cruz                  68 H        66   1.74        249    22\n 7 Antonio Fernández Ocaña            51 H        62   1.72        276    21\n 8 Pilar Martín González              22 M        60   1.66         NA    22\n 9 Pedro Gálvez Tenorio               35 H        90   1.94        241    24\n10 Santiago Reillo Manzano            46 H        75   1.85        280    22\n11 Macarena Álvarez Luna              53 M        55   1.62        262    21\n12 José María de la Guía Sanz         58 H        78   1.87        198    22\n13 Miguel Angel Cuadrado Gutiérrez    27 H       109   1.98        210    28\n14 Carolina Rubio Moreno              20 M        61   1.77        194    19\n\n\n\n\n\n\nCrear una nueva columna con la variable obesidad recodificando la columna imc en las siguientes categorías.\n\n\n\n\nRango IMC\nCategoría\n\n\n\n\nMenor de 18.5\nBajo peso\n\n\nDe 18.5 a 24.5\nSaludable\n\n\nDe 24.5 a 30\nSobrepeso\n\n\nMayor de 30\nObeso\n\n\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- df %>%\n    mutate(Obesidad = cut(imc, breaks = c(0, 18.5, 24.5, 30, Inf), labels = c(\"Bajo peso\", \"Saludable\", \"Sobrepeso\", \"Obeso\")))\ndf\n\n# A tibble: 14 × 8\n   nombre                      edad sexo   peso altura colesterol   imc Obesidad\n   <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n 1 José Luis Martínez Izquie…    18 H        85   1.79        182    27 Sobrepe…\n 2 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab…\n 3 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n 4 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab…\n 5 Marisa López Collado          46 M        51   1.58        148    20 Saludab…\n 6 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab…\n 7 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab…\n 8 Pilar Martín González         22 M        60   1.66         NA    22 Saludab…\n 9 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab…\n10 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab…\n11 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab…\n12 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab…\n13 Miguel Angel Cuadrado Gut…    27 H       109   1.98        210    28 Sobrepe…\n14 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab…\n\n\n\n\n\n\nSeleccionar las columnas nombre, sexo y edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(nombre, sexo, edad)\n\n# A tibble: 14 × 3\n   nombre                          sexo   edad\n   <chr>                           <chr> <dbl>\n 1 José Luis Martínez Izquierdo    H        18\n 2 Rosa Díaz Díaz                  M        32\n 3 Javier García Sánchez           H        24\n 4 Carmen López Pinzón             M        35\n 5 Marisa López Collado            M        46\n 6 Antonio Ruiz Cruz               H        68\n 7 Antonio Fernández Ocaña         H        51\n 8 Pilar Martín González           M        22\n 9 Pedro Gálvez Tenorio            H        35\n10 Santiago Reillo Manzano         H        46\n11 Macarena Álvarez Luna           M        53\n12 José María de la Guía Sanz      H        58\n13 Miguel Angel Cuadrado Gutiérrez H        27\n14 Carolina Rubio Moreno           M        20\n\n\n\n\n\n\nAnonimizar los datos eliminando la columna nombre.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(-nombre)\n\n# A tibble: 14 × 7\n    edad sexo   peso altura colesterol   imc Obesidad \n   <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n 1    18 H        85   1.79        182    27 Sobrepeso\n 2    32 M        65   1.73        232    22 Saludable\n 3    24 H        NA   1.81        191    NA <NA>     \n 4    35 M        65   1.7         200    22 Saludable\n 5    46 M        51   1.58        148    20 Saludable\n 6    68 H        66   1.74        249    22 Saludable\n 7    51 H        62   1.72        276    21 Saludable\n 8    22 M        60   1.66         NA    22 Saludable\n 9    35 H        90   1.94        241    24 Saludable\n10    46 H        75   1.85        280    22 Saludable\n11    53 M        55   1.62        262    21 Saludable\n12    58 H        78   1.87        198    22 Saludable\n13    27 H       109   1.98        210    28 Sobrepeso\n14    20 M        61   1.77        194    19 Saludable\n\n\n\n\n\n\nReordenar las columnas poniendo la columna sexo antes que la columna edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    select(nombre, sexo, edad, everything())\n\n# A tibble: 14 × 8\n   nombre                     sexo   edad  peso altura colesterol   imc Obesidad\n   <chr>                      <chr> <dbl> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n 1 José Luis Martínez Izquie… H        18    85   1.79        182    27 Sobrepe…\n 2 Rosa Díaz Díaz             M        32    65   1.73        232    22 Saludab…\n 3 Javier García Sánchez      H        24    NA   1.81        191    NA <NA>    \n 4 Carmen López Pinzón        M        35    65   1.7         200    22 Saludab…\n 5 Marisa López Collado       M        46    51   1.58        148    20 Saludab…\n 6 Antonio Ruiz Cruz          H        68    66   1.74        249    22 Saludab…\n 7 Antonio Fernández Ocaña    H        51    62   1.72        276    21 Saludab…\n 8 Pilar Martín González      M        22    60   1.66         NA    22 Saludab…\n 9 Pedro Gálvez Tenorio       H        35    90   1.94        241    24 Saludab…\n10 Santiago Reillo Manzano    H        46    75   1.85        280    22 Saludab…\n11 Macarena Álvarez Luna      M        53    55   1.62        262    21 Saludab…\n12 José María de la Guía Sanz H        58    78   1.87        198    22 Saludab…\n13 Miguel Angel Cuadrado Gut… H        27   109   1.98        210    28 Sobrepe…\n14 Carolina Rubio Moreno      M        20    61   1.77        194    19 Saludab…\n\n\n\n\n\n\nFiltrar el data frame para quedarse con las mujeres.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter(sexo == \"M\")\n\n# A tibble: 6 × 8\n  nombre                 edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                 <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Rosa Díaz Díaz           32 M        65   1.73        232    22 Saludable\n2 Carmen López Pinzón      35 M        65   1.7         200    22 Saludable\n3 Marisa López Collado     46 M        51   1.58        148    20 Saludable\n4 Pilar Martín González    22 M        60   1.66         NA    22 Saludable\n5 Macarena Álvarez Luna    53 M        55   1.62        262    21 Saludable\n6 Carolina Rubio Moreno    20 M        61   1.77        194    19 Saludable\n\n\n\n\n\n\nFiltrar el data frame para quedarse con los hombres mayores de 30 años.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter( sexo == \"H\" & edad > 30)\n\n# A tibble: 5 × 8\n  nombre                      edad sexo   peso altura colesterol   imc Obesidad \n  <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>    \n1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludable\n2 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludable\n3 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludable\n4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludable\n5 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludable\n\n\n\n\n\n\nFiltrar el data frame para eliminar las filas con datos perdidos en la columna colesterol.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    filter(!is.na(colesterol))\n\n# A tibble: 13 × 8\n   nombre                      edad sexo   peso altura colesterol   imc Obesidad\n   <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n 1 José Luis Martínez Izquie…    18 H        85   1.79        182    27 Sobrepe…\n 2 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab…\n 3 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n 4 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab…\n 5 Marisa López Collado          46 M        51   1.58        148    20 Saludab…\n 6 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab…\n 7 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab…\n 8 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab…\n 9 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab…\n10 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab…\n11 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab…\n12 Miguel Angel Cuadrado Gut…    27 H       109   1.98        210    28 Sobrepe…\n13 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab…\n\n\n\n\n\n\nOrdenar el data frame según la columna nombre.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    arrange(nombre)\n\n# A tibble: 14 × 8\n   nombre                      edad sexo   peso altura colesterol   imc Obesidad\n   <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n 1 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab…\n 2 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab…\n 3 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab…\n 4 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab…\n 5 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n 6 José Luis Martínez Izquie…    18 H        85   1.79        182    27 Sobrepe…\n 7 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab…\n 8 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab…\n 9 Marisa López Collado          46 M        51   1.58        148    20 Saludab…\n10 Miguel Angel Cuadrado Gut…    27 H       109   1.98        210    28 Sobrepe…\n11 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab…\n12 Pilar Martín González         22 M        60   1.66         NA    22 Saludab…\n13 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab…\n14 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab…\n\n\n\n\n\n\nOrdenar el data frame ascendentemente por la columna sexo y descendentemente por la columna edad.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf %>%\n    arrange(sexo, desc(edad))\n\n# A tibble: 14 × 8\n   nombre                      edad sexo   peso altura colesterol   imc Obesidad\n   <chr>                      <dbl> <chr> <dbl>  <dbl>      <dbl> <dbl> <fct>   \n 1 Antonio Ruiz Cruz             68 H        66   1.74        249    22 Saludab…\n 2 José María de la Guía Sanz    58 H        78   1.87        198    22 Saludab…\n 3 Antonio Fernández Ocaña       51 H        62   1.72        276    21 Saludab…\n 4 Santiago Reillo Manzano       46 H        75   1.85        280    22 Saludab…\n 5 Pedro Gálvez Tenorio          35 H        90   1.94        241    24 Saludab…\n 6 Miguel Angel Cuadrado Gut…    27 H       109   1.98        210    28 Sobrepe…\n 7 Javier García Sánchez         24 H        NA   1.81        191    NA <NA>    \n 8 José Luis Martínez Izquie…    18 H        85   1.79        182    27 Sobrepe…\n 9 Macarena Álvarez Luna         53 M        55   1.62        262    21 Saludab…\n10 Marisa López Collado          46 M        51   1.58        148    20 Saludab…\n11 Carmen López Pinzón           35 M        65   1.7         200    22 Saludab…\n12 Rosa Díaz Díaz                32 M        65   1.73        232    22 Saludab…\n13 Pilar Martín González         22 M        60   1.66         NA    22 Saludab…\n14 Carolina Rubio Moreno         20 M        61   1.77        194    19 Saludab…"
  },
  {
    "objectID": "02-preprocesamiento-datos.html#ejercicios-propuestos",
    "href": "02-preprocesamiento-datos.html#ejercicios-propuestos",
    "title": "2  Preprocesamiento de datos",
    "section": "2.2 Ejercicios Propuestos",
    "text": "2.2 Ejercicios Propuestos\n\nEjercicio 2.3 La siguiente tabla recoge las notas de los alumnos de un curso con dos asignaturas.\n\n\n\nAlumno\nSexo\nFísica\nQuímica\n\n\n\n\nCarlos\nH\n6.7\n8.1\n\n\nMaría\nM\n7.2\n9.5\n\n\nCarmen\nM\n5.5\n5\n\n\nPedro\nH\n\n4.5\n\n\nLuis\nH\n3.5\n5\n\n\nSara\nM\n6.2\n4\n\n\n\n\nDefinir cuatro vectores con el nombre, el sexo y las notas de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nnombre <- c(\"Carlos\", \"María\", \"Carmen\", \"Pedro\", \"Luis\", \"Sara\")\nsexo <- c(\"H\", \"M\", \"M\", \"H\", \"H\", \"M\")\nfisica <- c(6.7, 7.2, 5.5, NA, 3.5, 6.2)\nquimica <- c(8.1, 9.5, 5, 4.5, 5, 4)\n\n\n\n\n\nConvertir el sexo en un factor y mostrar sus niveles.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nsexo <- factor(sexo)\nlevels(sexo)\n\n[1] \"H\" \"M\"\n\n\n\n\n\n\nCrear un data frame con el nombre, sexo y las notas de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf <- data.frame(nombre, sexo, fisica, quimica)\ndf\n\n  nombre sexo fisica quimica\n1 Carlos    H    6.7     8.1\n2  María    M    7.2     9.5\n3 Carmen    M    5.5     5.0\n4  Pedro    H     NA     4.5\n5   Luis    H    3.5     5.0\n6   Sara    M    6.2     4.0\n\n\n\n\n\n\nCrear una nueva columna con la nota media de Física y Química.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf$media <- (df$fisica + df$quimica) / 2\ndf\n\n  nombre sexo fisica quimica media\n1 Carlos    H    6.7     8.1  7.40\n2  María    M    7.2     9.5  8.35\n3 Carmen    M    5.5     5.0  5.25\n4  Pedro    H     NA     4.5    NA\n5   Luis    H    3.5     5.0  4.25\n6   Sara    M    6.2     4.0  5.10\n\n\n\n\n\n\nCrear una nueva columna booleana aprobado que tenga el valor TRUE si la media es mayor o igual que 5 y FALSE en caso contrario.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf$aprobado <- df$media >= 5\ndf\n\n  nombre sexo fisica quimica media aprobado\n1 Carlos    H    6.7     8.1  7.40     TRUE\n2  María    M    7.2     9.5  8.35     TRUE\n3 Carmen    M    5.5     5.0  5.25     TRUE\n4  Pedro    H     NA     4.5    NA       NA\n5   Luis    H    3.5     5.0  4.25    FALSE\n6   Sara    M    6.2     4.0  5.10     TRUE\n\n\n\n\n\n\nFiltrar el data frame para quedarse con el nombre y la media de las mujeres que han aprobado.\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\ndf[df$sexo == \"M\" & df$media >= 5, c(\"nombre\", \"media\")]\n\n  nombre media\n2  María  8.35\n3 Carmen  5.25\n6   Sara  5.10\n\n\n\n\n\n\n\nEjercicio 2.4 Se ha diseñado un ensayo clínico leatorizado, doble-ciego y controlado con placebo, para estudiar el efecto de dos alternativas terapéuticas en el control de la hipertensión arterial. Se han reclutado 100 pacientes hipertensos y estos han sido distribuidos aleatoriamente en tres grupos de tratamiento. A uno de los grupos (control) se le administró un placebo, a otro grupo se le administró un inhibidor de la enzima conversora de la angiotensina (IECA) y al otro un tratamiento combinado de un diurético y un Antagonista del Calcio. Las variables respuesta final fueron las presiones arteriales sistólica y diastólica.\nLos datos con las claves de aleatorización han sido introducidos en una base de datos que reside en la central de aleatorización, mientras que los datos clínicos han sido archivados en dos archivos distintos, uno para cada uno de los dos centros participantes en el estudio.\nLas variables almacenadas en estos archivos clínicos son las siguientes:\n\nCLAVE: Clave de aleatorización\nNOMBRE: Iniciales del paciente\nF_NACIM: Fecha de Nacimiento\nF_INCLUS: Fecha de inclusión\nSEXO: Sexo (0: Hombre 1: Mujer)\nALTURA: Altura en cm.\nPESO: Peso en Kg.\nPAD_INI: Presión diastólica basal (inicial)\nPAD_FIN: Presión diastólica final\nPAS_INI: Presión sistólica basal (inicial)\nPAS_FIN: Presión sistólica final\n\nEl archivo de claves de aleatorización contiene sólo dos variables.\n\nCLAVE: Clave de aleatorización\nFARMACO: Fármaco administrado (0: Placebo, 1: IECA, 2:Ca Antagonista + diurético)\n\n\nCrear un data frame con los datos de los pacientes del hospital A (fichero de Excel datos-hospital-a.xls).\n\n\n\n\n\n\n\nSolución\n\n\n\n\n\n\nlibrary(readxl)\n#dfa <- read_excel()\n\n\n\n\n\nCrear un data frame con los datos de los pacientes del hosptial B (fichero csv datos-hospital-b.csv).\nFusionar los datos de los dos hospitales en un nuevo data frame.\nCrear un data frame con los datos de las claves de aleatorización (fichero csv claves-aleatorizacion.csv)\nFusionar el data frame con los datos clínicos y el data frame con claves de aleatorización en un nuevo data frame.\nConvertir en un factor el sexo.\nCrear una nueva columna para la evolución de la presión arterial diastólica restando las columnas PAS_FIN y PAS_FIN."
  }
]